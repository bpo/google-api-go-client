{
 "kind": "discovery#restDescription",
 "etag": "\"BgGnx7p-6wsAbOn4St99QhtBGbA/3R7D_A64Rx6ouK7PxXF12zPWTUw\"",
 "discoveryVersion": "v1",
 "id": "games:v1",
 "name": "games",
 "version": "v1",
 "revision": "20130712",
 "title": "Google Play Game Services API",
 "description": "The API for Google Play Game Services.",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "documentationLink": "https://developers.google.com/games/services/",
 "protocol": "rest",
 "baseUrl": "https://www.googleapis.com/games/v1/",
 "basePath": "/games/v1/",
 "rootUrl": "https://www.googleapis.com/",
 "servicePath": "games/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/plus.login": {
     "description": "Know your name, basic info, and list of people you're connected to on Google+"
    }
   }
  }
 },
 "schemas": {
  "AchievementDefinition": {
   "id": "AchievementDefinition",
   "type": "object",
   "description": "This is a JSON template for an achievement definition object.",
   "properties": {
    "achievementType": {
     "type": "string",
     "description": "The type of the achievement.\nPossible values are:  \n- \"STANDARD\" - Achievement is either locked or unlocked. \n- \"INCREMENTAL\" - Achievement is incremental."
    },
    "description": {
     "type": "string",
     "description": "The description of the achievement."
    },
    "formattedTotalSteps": {
     "type": "string",
     "description": "The total steps for an incremental achievement as a string."
    },
    "id": {
     "type": "string",
     "description": "The ID of the achievement."
    },
    "initialState": {
     "type": "string",
     "description": "The initial state of the achievement.\nPossible values are:  \n- \"HIDDEN\" - Achievement is hidden. \n- \"REVEALED\" - Achievement is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."
    },
    "isRevealedIconUrlDefault": {
     "type": "boolean",
     "description": "Indicates whether the revealed icon image being returned is a default image, or is provided by the game."
    },
    "isUnlockedIconUrlDefault": {
     "type": "boolean",
     "description": "Indicates whether the unlocked icon image being returned is a default image, or is game-provided."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementDefinition.",
     "default": "games#achievementDefinition"
    },
    "name": {
     "type": "string",
     "description": "The name of the achievement."
    },
    "revealedIconUrl": {
     "type": "string",
     "description": "The image URL for the revealed achievement icon."
    },
    "totalSteps": {
     "type": "integer",
     "description": "The total steps for an incremental achievement.",
     "format": "int32"
    },
    "unlockedIconUrl": {
     "type": "string",
     "description": "The image URL for the unlocked achievement icon."
    }
   }
  },
  "AchievementDefinitionsListResponse": {
   "id": "AchievementDefinitionsListResponse",
   "type": "object",
   "description": "This is a JSON template for a list of achievement definition objects.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The achievement definitions.",
     "items": {
      "$ref": "AchievementDefinition"
     }
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementDefinitionsListResponse.",
     "default": "games#achievementDefinitionsListResponse"
    },
    "nextPageToken": {
     "type": "string",
     "description": "Token corresponding to the next page of results."
    }
   }
  },
  "AchievementIncrementResponse": {
   "id": "AchievementIncrementResponse",
   "type": "object",
   "description": "This is a JSON template for an achievement increment response",
   "properties": {
    "currentSteps": {
     "type": "integer",
     "description": "The current steps recorded for this incremental achievement.",
     "format": "int32"
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementIncrementResponse.",
     "default": "games#achievementIncrementResponse"
    },
    "newlyUnlocked": {
     "type": "boolean",
     "description": "Whether the the current steps for the achievement has reached the number of steps required to unlock."
    }
   }
  },
  "AchievementRevealResponse": {
   "id": "AchievementRevealResponse",
   "type": "object",
   "description": "This is a JSON template for an achievement reveal response",
   "properties": {
    "currentState": {
     "type": "string",
     "description": "The current state of the achievement for which a reveal was attempted. This might be UNLOCKED if the achievement was already unlocked.\nPossible values are:  \n- \"REVEALED\" - Achievement is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementRevealResponse.",
     "default": "games#achievementRevealResponse"
    }
   }
  },
  "AchievementUnlockResponse": {
   "id": "AchievementUnlockResponse",
   "type": "object",
   "description": "This is a JSON template for an achievement unlock response",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUnlockResponse.",
     "default": "games#achievementUnlockResponse"
    },
    "newlyUnlocked": {
     "type": "boolean",
     "description": "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player)."
    }
   }
  },
  "AggregateStats": {
   "id": "AggregateStats",
   "type": "object",
   "description": "This is a JSON template for aggregate stats.",
   "properties": {
    "count": {
     "type": "string",
     "description": "The number of messages sent between a pair of peers.",
     "format": "int64"
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#aggregateStats.",
     "default": "games#aggregateStats"
    },
    "max": {
     "type": "string",
     "description": "The maximum amount.",
     "format": "int64"
    },
    "min": {
     "type": "string",
     "description": "The minimum amount.",
     "format": "int64"
    },
    "sum": {
     "type": "string",
     "description": "The total number of bytes sent for messages between a pair of peers.",
     "format": "int64"
    }
   }
  },
  "AnonymousPlayer": {
   "id": "AnonymousPlayer",
   "type": "object",
   "description": "This is a JSON template for an anonymous player",
   "properties": {
    "avatarImageUrl": {
     "type": "string",
     "description": "The base URL for the image to display for the anonymous player."
    },
    "displayName": {
     "type": "string",
     "description": "The name to display for the anonymous player."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#anonymousPlayer.",
     "default": "games#anonymousPlayer"
    }
   }
  },
  "Application": {
   "id": "Application",
   "type": "object",
   "description": "This is a JSON template for the Application resource.",
   "properties": {
    "achievement_count": {
     "type": "integer",
     "description": "The number of achievements visible to the currently authenticated player.",
     "format": "int32"
    },
    "assets": {
     "type": "array",
     "description": "The assets of the application.",
     "items": {
      "$ref": "ImageAsset"
     }
    },
    "author": {
     "type": "string",
     "description": "The author of the application."
    },
    "category": {
     "$ref": "ApplicationCategory",
     "description": "The category of the application."
    },
    "description": {
     "type": "string",
     "description": "The description of the application."
    },
    "id": {
     "type": "string",
     "description": "The ID of the application."
    },
    "instances": {
     "type": "array",
     "description": "The instances of the application.",
     "items": {
      "$ref": "Instance"
     }
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#application.",
     "default": "games#application"
    },
    "lastUpdatedTimestamp": {
     "type": "string",
     "description": "The last updated timestamp of the application.",
     "format": "int64"
    },
    "leaderboard_count": {
     "type": "integer",
     "description": "The number of leaderboards visible to the currently authenticated player.",
     "format": "int32"
    },
    "name": {
     "type": "string",
     "description": "The name of the application."
    }
   }
  },
  "ApplicationCategory": {
   "id": "ApplicationCategory",
   "type": "object",
   "description": "This is a JSON template for an application category object.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#applicationCategory.",
     "default": "games#applicationCategory"
    },
    "primary": {
     "type": "string",
     "description": "The primary category."
    },
    "secondary": {
     "type": "string",
     "description": "The secondary category."
    }
   }
  },
  "ImageAsset": {
   "id": "ImageAsset",
   "type": "object",
   "description": "This is a JSON template for an image asset object.",
   "properties": {
    "height": {
     "type": "integer",
     "description": "The height of the asset.",
     "format": "int32"
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#imageAsset.",
     "default": "games#imageAsset"
    },
    "name": {
     "type": "string",
     "description": "The name of the asset."
    },
    "url": {
     "type": "string",
     "description": "The URL of the asset."
    },
    "width": {
     "type": "integer",
     "description": "The width of the asset.",
     "format": "int32"
    }
   }
  },
  "Instance": {
   "id": "Instance",
   "type": "object",
   "description": "This is a JSON template for the Instance resource.",
   "properties": {
    "acquisitionUri": {
     "type": "string",
     "description": "URI which shows where a user can acquire this instance."
    },
    "androidInstance": {
     "$ref": "InstanceAndroidDetails",
     "description": "Platform dependent details for Android."
    },
    "iosInstance": {
     "$ref": "InstanceIosDetails",
     "description": "Platform dependent details for iOS."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#instance.",
     "default": "games#instance"
    },
    "name": {
     "type": "string",
     "description": "Localized display name."
    },
    "platformType": {
     "type": "string",
     "description": "The platform type.\nPossible values are:  \n- \"ANDROID\" - Instance is for Android. \n- \"IOS\" - Instance is for iOS \n- \"WEB_APP\" - Instance is for Web App."
    },
    "realtimePlay": {
     "type": "boolean",
     "description": "Flag to show if this game instance supports realtime play."
    },
    "turnBasedPlay": {
     "type": "boolean",
     "description": "Flag to show if this game instance supports turn based play."
    },
    "webInstance": {
     "$ref": "InstanceWebDetails",
     "description": "Platform dependent details for Web."
    }
   }
  },
  "InstanceAndroidDetails": {
   "id": "InstanceAndroidDetails",
   "type": "object",
   "description": "This is a JSON template for the Android instance details resource.",
   "properties": {
    "enablePiracyCheck": {
     "type": "boolean",
     "description": "Flag indicating whether the anti-piracy check is enabled."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#instanceAndroidDetails.",
     "default": "games#instanceAndroidDetails"
    },
    "packageName": {
     "type": "string",
     "description": "Android package name which maps to Google Play URL."
    },
    "preferred": {
     "type": "boolean",
     "description": "Indicates that this instance is the default for new installations."
    }
   }
  },
  "InstanceIosDetails": {
   "id": "InstanceIosDetails",
   "type": "object",
   "description": "This is a JSON template for the iOS details resource.",
   "properties": {
    "bundleIdentifier": {
     "type": "string",
     "description": "Bundle identifier."
    },
    "itunesAppId": {
     "type": "string",
     "description": "iTunes App ID."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#instanceIosDetails.",
     "default": "games#instanceIosDetails"
    },
    "preferredForIpad": {
     "type": "boolean",
     "description": "Indicates that this instance is the default for new installations on iPad devices."
    },
    "preferredForIphone": {
     "type": "boolean",
     "description": "Indicates that this instance is the default for new installations on iPhone devices."
    },
    "supportIpad": {
     "type": "boolean",
     "description": "Flag to indicate if this instance supports iPad."
    },
    "supportIphone": {
     "type": "boolean",
     "description": "Flag to indicate if this instance supports iPhone."
    }
   }
  },
  "InstanceWebDetails": {
   "id": "InstanceWebDetails",
   "type": "object",
   "description": "This is a JSON template for the Web details resource.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#instanceWebDetails.",
     "default": "games#instanceWebDetails"
    },
    "launchUrl": {
     "type": "string",
     "description": "Launch URL for the game."
    },
    "preferred": {
     "type": "boolean",
     "description": "Indicates that this instance is the default for new installations."
    }
   }
  },
  "Leaderboard": {
   "id": "Leaderboard",
   "type": "object",
   "description": "This is a JSON template for the Leaderboard resource.",
   "properties": {
    "iconUrl": {
     "type": "string",
     "description": "The icon for the leaderboard."
    },
    "id": {
     "type": "string",
     "description": "The leaderboard ID."
    },
    "isIconUrlDefault": {
     "type": "boolean",
     "description": "Indicates whether the icon image being returned is a default image, or is game-provided."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboard.",
     "default": "games#leaderboard"
    },
    "name": {
     "type": "string",
     "description": "The name of the leaderboard."
    },
    "order": {
     "type": "string",
     "description": "How scores are ordered.\nPossible values are:  \n- \"LARGER_IS_BETTER\" - Larger values are better; scores are sorted in descending order. \n- \"SMALLER_IS_BETTER\" - Smaller values are better; scores are sorted in ascending order."
    }
   }
  },
  "LeaderboardEntry": {
   "id": "LeaderboardEntry",
   "type": "object",
   "description": "This is a JSON template for the Leaderboard Entry resource.",
   "properties": {
    "formattedScore": {
     "type": "string",
     "description": "The localized string for the numerical value of this score."
    },
    "formattedScoreRank": {
     "type": "string",
     "description": "The localized string for the rank of this score for this leaderboard."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardEntry.",
     "default": "games#leaderboardEntry"
    },
    "player": {
     "$ref": "Player",
     "description": "The player who holds this score."
    },
    "scoreRank": {
     "type": "string",
     "description": "The rank of this score for this leaderboard.",
     "format": "int64"
    },
    "scoreValue": {
     "type": "string",
     "description": "The numerical value of this score.",
     "format": "int64"
    },
    "timeSpan": {
     "type": "string",
     "description": "The time span of this high score.\nPossible values are:  \n- \"ALL_TIME\" - The score is an all-time high score. \n- \"WEEKLY\" - The score is a weekly high score. \n- \"DAILY\" - The score is a daily high score."
    },
    "writeTimestampMillis": {
     "type": "string",
     "description": "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
     "format": "int64"
    }
   }
  },
  "LeaderboardListResponse": {
   "id": "LeaderboardListResponse",
   "type": "object",
   "description": "This is a JSON template for a list of leaderboard objects.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The leaderboards.",
     "items": {
      "$ref": "Leaderboard"
     }
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardListResponse.",
     "default": "games#leaderboardListResponse"
    },
    "nextPageToken": {
     "type": "string",
     "description": "Token corresponding to the next page of results."
    }
   }
  },
  "LeaderboardScoreRank": {
   "id": "LeaderboardScoreRank",
   "type": "object",
   "description": "This is a JSON template for a score rank in a leaderboard.",
   "properties": {
    "formattedNumScores": {
     "type": "string",
     "description": "The number of scores in the leaderboard as a string."
    },
    "formattedRank": {
     "type": "string",
     "description": "The rank in the leaderboard as a string."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardScoreRank.",
     "default": "games#leaderboardScoreRank"
    },
    "numScores": {
     "type": "string",
     "description": "The number of scores in the leaderboard.",
     "format": "int64"
    },
    "rank": {
     "type": "string",
     "description": "The rank in the leaderboard.",
     "format": "int64"
    }
   }
  },
  "LeaderboardScores": {
   "id": "LeaderboardScores",
   "type": "object",
   "description": "This is a JSON template for a ListScores response.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The scores in the leaderboard.",
     "items": {
      "$ref": "LeaderboardEntry"
     }
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardScores.",
     "default": "games#leaderboardScores"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The pagination token for the next page of results."
    },
    "numScores": {
     "type": "string",
     "description": "The total number of scores in the leaderboard.",
     "format": "int64"
    },
    "playerScore": {
     "$ref": "LeaderboardEntry",
     "description": "The score of the requesting player on the leaderboard. The player's score may appear both here and in the list of scores above. If you are viewing a public leaderboard and the player is not sharing their gameplay information publicly, the scoreRank and formattedScoreRank values will not be present."
    },
    "prevPageToken": {
     "type": "string",
     "description": "The pagination token for the previous page of results."
    }
   }
  },
  "NetworkDiagnostics": {
   "id": "NetworkDiagnostics",
   "type": "object",
   "description": "This is a JSON template for network diagnostics reported for a client.",
   "properties": {
    "androidNetworkSubtype": {
     "type": "integer",
     "description": "The Android network subtype.",
     "format": "int32"
    },
    "androidNetworkType": {
     "type": "integer",
     "description": "The Android network type.",
     "format": "int32"
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#networkDiagnostics.",
     "default": "games#networkDiagnostics"
    },
    "registrationLatencyMillis": {
     "type": "integer",
     "description": "The amount of time in milliseconds it took for the client to establish a connection with the XMPP server.",
     "format": "int32"
    }
   }
  },
  "PeerChannelDiagnostics": {
   "id": "PeerChannelDiagnostics",
   "type": "object",
   "description": "This is a JSON template for peer channel diagnostics.",
   "properties": {
    "bytesReceived": {
     "$ref": "AggregateStats",
     "description": "Number of bytes received."
    },
    "bytesSent": {
     "$ref": "AggregateStats",
     "description": "Number of bytes sent."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#peerChannelDiagnostics.",
     "default": "games#peerChannelDiagnostics"
    },
    "numMessagesLost": {
     "type": "integer",
     "description": "Number of messages lost.",
     "format": "int32"
    },
    "numMessagesReceived": {
     "type": "integer",
     "description": "Number of messages received.",
     "format": "int32"
    },
    "numMessagesSent": {
     "type": "integer",
     "description": "Number of messages sent.",
     "format": "int32"
    },
    "numSendFailures": {
     "type": "integer",
     "description": "Number of send failures.",
     "format": "int32"
    },
    "roundtripLatencyMillis": {
     "$ref": "AggregateStats",
     "description": "Roundtrip latency stats in milliseconds."
    }
   }
  },
  "PeerSessionDiagnostics": {
   "id": "PeerSessionDiagnostics",
   "type": "object",
   "description": "This is a JSON template for peer session diagnostics.",
   "properties": {
    "connectedTimestampMillis": {
     "type": "string",
     "description": "Connected time in milliseconds.",
     "format": "int64"
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#peerSessionDiagnostics.",
     "default": "games#peerSessionDiagnostics"
    },
    "participantId": {
     "type": "string",
     "description": "The participant ID of the peer."
    },
    "reliableChannel": {
     "$ref": "PeerChannelDiagnostics",
     "description": "Reliable channel diagnostics."
    },
    "unreliableChannel": {
     "$ref": "PeerChannelDiagnostics",
     "description": "Unreliable channel diagnostics."
    }
   }
  },
  "Player": {
   "id": "Player",
   "type": "object",
   "description": "This is a JSON template for a Player resource.",
   "properties": {
    "avatarImageUrl": {
     "type": "string",
     "description": "The base URL for the image that represents the player."
    },
    "displayName": {
     "type": "string",
     "description": "The name to display for the player."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#player.",
     "default": "games#player"
    },
    "playerId": {
     "type": "string",
     "description": "The ID of the player."
    }
   }
  },
  "PlayerAchievement": {
   "id": "PlayerAchievement",
   "type": "object",
   "description": "This is a JSON template for an achievement object.",
   "properties": {
    "achievementState": {
     "type": "string",
     "description": "The state of the achievement.\nPossible values are:  \n- \"HIDDEN\" - Achievement is hidden. \n- \"REVEALED\" - Achievement is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."
    },
    "currentSteps": {
     "type": "integer",
     "description": "The current steps for an incremental achievement.",
     "format": "int32"
    },
    "formattedCurrentStepsString": {
     "type": "string",
     "description": "The current steps for an incremental achievement as a string."
    },
    "id": {
     "type": "string",
     "description": "The ID of the achievement."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#playerAchievement.",
     "default": "games#playerAchievement"
    },
    "lastUpdatedTimestamp": {
     "type": "string",
     "description": "The timestamp of the last modification to this achievement's state.",
     "format": "int64"
    }
   }
  },
  "PlayerAchievementListResponse": {
   "id": "PlayerAchievementListResponse",
   "type": "object",
   "description": "This is a JSON template for a list of achievement objects.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The achievements.",
     "items": {
      "$ref": "PlayerAchievement"
     }
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#playerAchievementListResponse.",
     "default": "games#playerAchievementListResponse"
    },
    "nextPageToken": {
     "type": "string",
     "description": "Token corresponding to the next page of results."
    }
   }
  },
  "PlayerLeaderboardScore": {
   "id": "PlayerLeaderboardScore",
   "type": "object",
   "description": "This is a JSON template for a player leaderboard score object.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#playerLeaderboardScore.",
     "default": "games#playerLeaderboardScore"
    },
    "leaderboard_id": {
     "type": "string",
     "description": "The ID of the leaderboard this score is in."
    },
    "publicRank": {
     "$ref": "LeaderboardScoreRank",
     "description": "The public rank of the score in this leaderboard. This object will not be present if the user is not sharing their scores publicly."
    },
    "scoreString": {
     "type": "string",
     "description": "The formatted value of this score."
    },
    "scoreValue": {
     "type": "string",
     "description": "The numerical value of this score.",
     "format": "int64"
    },
    "socialRank": {
     "$ref": "LeaderboardScoreRank",
     "description": "The social rank of the score in this leaderboard."
    },
    "timeSpan": {
     "type": "string",
     "description": "The time span of this score.\nPossible values are:  \n- \"ALL_TIME\" - The score is an all-time score. \n- \"WEEKLY\" - The score is a weekly score. \n- \"DAILY\" - The score is a daily score."
    },
    "writeTimestamp": {
     "type": "string",
     "description": "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
     "format": "int64"
    }
   }
  },
  "PlayerLeaderboardScoreListResponse": {
   "id": "PlayerLeaderboardScoreListResponse",
   "type": "object",
   "description": "This is a JSON template for a list of player leaderboard scores.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The leaderboard scores.",
     "items": {
      "$ref": "PlayerLeaderboardScore"
     }
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#playerLeaderboardScoreListResponse.",
     "default": "games#playerLeaderboardScoreListResponse"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The pagination token for the next page of results."
    }
   }
  },
  "PlayerScore": {
   "id": "PlayerScore",
   "type": "object",
   "description": "This is a JSON template for a player score.",
   "properties": {
    "formattedScore": {
     "type": "string",
     "description": "The formatted score for this player score."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#playerScore.",
     "default": "games#playerScore"
    },
    "score": {
     "type": "string",
     "description": "The numerical value for this player score.",
     "format": "int64"
    },
    "timeSpan": {
     "type": "string",
     "description": "The time span for this player score.\nPossible values are:  \n- \"ALL_TIME\" - The score is an all-time score. \n- \"WEEKLY\" - The score is a weekly score. \n- \"DAILY\" - The score is a daily score."
    }
   }
  },
  "PlayerScoreListResponse": {
   "id": "PlayerScoreListResponse",
   "type": "object",
   "description": "This is a JSON template for a list of score submission statuses.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreListResponse.",
     "default": "games#playerScoreListResponse"
    },
    "submittedScores": {
     "type": "array",
     "description": "The score submissions statuses.",
     "items": {
      "$ref": "PlayerScoreResponse"
     }
    }
   }
  },
  "PlayerScoreResponse": {
   "id": "PlayerScoreResponse",
   "type": "object",
   "description": "This is a JSON template for a list of leaderboard entry resources.",
   "properties": {
    "beatenScoreTimeSpans": {
     "type": "array",
     "description": "The time spans where the submitted score is better than the existing score for that time span.\nPossible values are:  \n- \"ALL_TIME\" - The score is an all-time score. \n- \"WEEKLY\" - The score is a weekly score. \n- \"DAILY\" - The score is a daily score.",
     "items": {
      "type": "string"
     }
    },
    "formattedScore": {
     "type": "string",
     "description": "The formatted value of the submitted score."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreResponse.",
     "default": "games#playerScoreResponse"
    },
    "leaderboardId": {
     "type": "string",
     "description": "The leaderboard ID that this score was submitted to."
    },
    "unbeatenScores": {
     "type": "array",
     "description": "The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's DAILY score, but not better than the player's scores for the WEEKLY or ALL_TIME time spans.",
     "items": {
      "$ref": "PlayerScore"
     }
    }
   }
  },
  "PlayerScoreSubmissionList": {
   "id": "PlayerScoreSubmissionList",
   "type": "object",
   "description": "This is a JSON template for a list of score submission requests",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreSubmissionList.",
     "default": "games#playerScoreSubmissionList"
    },
    "scores": {
     "type": "array",
     "description": "The score submissions.",
     "items": {
      "$ref": "ScoreSubmission"
     }
    }
   }
  },
  "RevisionCheckResponse": {
   "id": "RevisionCheckResponse",
   "type": "object",
   "description": "This is a JSON template for the result of checking a revision.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#revisionCheckResponse.",
     "default": "games#revisionCheckResponse"
    },
    "revisionStatus": {
     "type": "string",
     "description": "The result of the revision check.\nPossible values are:  \n- \"OK\" - The revision being used is current. \n- \"DEPRECATED\" - There is currently a newer version available, but the revision being used still works. \n- \"INVALID\" - The revision being used is not supported in any released version."
    }
   }
  },
  "Room": {
   "id": "Room",
   "type": "object",
   "description": "This is a JSON template for a room resource object.",
   "properties": {
    "applicationId": {
     "type": "string",
     "description": "The ID of the application being played."
    },
    "autoMatchingCriteria": {
     "$ref": "RoomAutoMatchingCriteria",
     "description": "Criteria for auto-matching players into this room."
    },
    "autoMatchingStatus": {
     "$ref": "RoomAutoMatchStatus",
     "description": "Auto-matching status for this room. Not set if the room is not currently in the automatching status."
    },
    "creationDetails": {
     "$ref": "RoomModification",
     "description": "Details about the room creation."
    },
    "description": {
     "type": "string",
     "description": "This short description is generated by our servers and worded relative to the player requesting the room. It is intended to be displayed when the room is shown in a list (that is, an invitation to a room.)"
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#room.",
     "default": "games#room"
    },
    "lastUpdateDetails": {
     "$ref": "RoomModification",
     "description": "Details about the last update to the room."
    },
    "participants": {
     "type": "array",
     "description": "The participants involved in the room, along with their statuses. Includes participants who have left or declined invitations.",
     "items": {
      "$ref": "RoomParticipant"
     }
    },
    "roomId": {
     "type": "string",
     "description": "Globally unique ID for a room."
    },
    "roomStatusVersion": {
     "type": "integer",
     "description": "The version of the room status: an increasing counter, used by the client to ignore out-of-order updates to room status.",
     "format": "int32"
    },
    "status": {
     "type": "string",
     "description": "The status of the room.\nPossible values are:  \n- \"ROOM_INVITING\" - One or more players have been invited and not responded. \n- \"ROOM_AUTO_MATCHING\" - One or more slots need to be filled by auto-matching. \n- \"ROOM_CONNECTING\" - Players have joined and are connecting to each other (either before or after auto-matching). \n- \"ROOM_ACTIVE\" - All players have joined and connected to each other. \n- \"ROOM_DELETED\" - The room should no longer be shown on the client. Returned in sync calls when a player joins a room (as a tombstone), or for rooms where all joined participants have left."
    },
    "variant": {
     "type": "integer",
     "description": "The variant / mode of the application being played; can be any integer value, or left blank.",
     "format": "int32"
    }
   }
  },
  "RoomAutoMatchStatus": {
   "id": "RoomAutoMatchStatus",
   "type": "object",
   "description": "This is a JSON template for status of room automatching that is in progress.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomAutoMatchStatus.",
     "default": "games#roomAutoMatchStatus"
    },
    "waitEstimateSeconds": {
     "type": "integer",
     "description": "An estimate for the amount of time that automatching is expected to take to complete.",
     "format": "int32"
    }
   }
  },
  "RoomAutoMatchingCriteria": {
   "id": "RoomAutoMatchingCriteria",
   "type": "object",
   "description": "This is a JSON template for a room auto-match criteria object.",
   "properties": {
    "exclusiveBitmask": {
     "type": "string",
     "description": "A bitmask indicating when auto-matches are valid. When ANDed with other exclusive bitmasks, the result must be zero. Can be used to support exclusive roles within a game.",
     "format": "int64"
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomAutoMatchingCriteria.",
     "default": "games#roomAutoMatchingCriteria"
    },
    "maxAutoMatchingPlayers": {
     "type": "integer",
     "description": "The maximum number of players that should be added to the room by auto-matching.",
     "format": "int32"
    },
    "minAutoMatchingPlayers": {
     "type": "integer",
     "description": "The minimum number of players that should be added to the room by auto-matching.",
     "format": "int32"
    }
   }
  },
  "RoomClientAddress": {
   "id": "RoomClientAddress",
   "type": "object",
   "description": "This is a JSON template for the client address when setting up a room.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomClientAddress.",
     "default": "games#roomClientAddress"
    },
    "xmppAddress": {
     "type": "string",
     "description": "The XMPP address of the client on the Google Games XMPP network."
    }
   }
  },
  "RoomCreateRequest": {
   "id": "RoomCreateRequest",
   "type": "object",
   "description": "This is a JSON template for a room creation request.",
   "properties": {
    "autoMatchingCriteria": {
     "$ref": "RoomAutoMatchingCriteria",
     "description": "Criteria for auto-matching players into this room."
    },
    "capabilities": {
     "type": "array",
     "description": "The capabilities that this client supports for realtime communication.",
     "items": {
      "type": "string"
     }
    },
    "clientAddress": {
     "$ref": "RoomClientAddress",
     "description": "Client address for the player creating the room."
    },
    "invitedPlayerIds": {
     "type": "array",
     "description": "The player IDs to invite to the room.",
     "items": {
      "type": "string"
     }
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomCreateRequest.",
     "default": "games#roomCreateRequest"
    },
    "networkDiagnostics": {
     "$ref": "NetworkDiagnostics",
     "description": "Network diagnostics for the client creating the room."
    },
    "variant": {
     "type": "integer",
     "description": "The variant / mode of the application to be played. This can be any integer value, or left blank. You should use a small number of variants to keep the auto-matching pool as large as possible.",
     "format": "int32"
    }
   }
  },
  "RoomJoinRequest": {
   "id": "RoomJoinRequest",
   "type": "object",
   "description": "This is a JSON template for a join room request.",
   "properties": {
    "capabilities": {
     "type": "array",
     "description": "The capabilities that this client supports for realtime communication.",
     "items": {
      "type": "string"
     }
    },
    "clientAddress": {
     "$ref": "RoomClientAddress",
     "description": "Client address for the player joining the room."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomJoinRequest.",
     "default": "games#roomJoinRequest"
    },
    "networkDiagnostics": {
     "$ref": "NetworkDiagnostics",
     "description": "Network diagnostics for the client joining the room."
    }
   }
  },
  "RoomLeaveDiagnostics": {
   "id": "RoomLeaveDiagnostics",
   "type": "object",
   "description": "This is a JSON template for room leave diagnostics.",
   "properties": {
    "androidNetworkSubtype": {
     "type": "integer",
     "description": "Android network subtype. http://developer.android.com/reference/android/net/NetworkInfo.html#getSubtype()",
     "format": "int32"
    },
    "androidNetworkType": {
     "type": "integer",
     "description": "Android network type. http://developer.android.com/reference/android/net/NetworkInfo.html#getType()",
     "format": "int32"
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomLeaveDiagnostics.",
     "default": "games#roomLeaveDiagnostics"
    },
    "peerSession": {
     "type": "array",
     "description": "Diagnostics about all peer sessions.",
     "items": {
      "$ref": "PeerSessionDiagnostics"
     }
    },
    "socketsUsed": {
     "type": "boolean",
     "description": "Whether or not sockets were used."
    }
   }
  },
  "RoomLeaveRequest": {
   "id": "RoomLeaveRequest",
   "type": "object",
   "description": "This is a JSON template for a leave room request.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomLeaveRequest.",
     "default": "games#roomLeaveRequest"
    },
    "leaveDiagnostics": {
     "$ref": "RoomLeaveDiagnostics",
     "description": "Diagnostics for a player leaving the room."
    },
    "reason": {
     "type": "string",
     "description": "Reason for leaving the match.\nPossible values are:  \n- \"PLAYER_LEFT\" - The player chose to leave the room.. \n- \"GAME_LEFT\" - The game chose to remove the player from the room. \n- \"REALTIME_ABANDONED\" - The player switched to another application and abandoned the room. \n- \"REALTIME_PEER_CONNECTION_FAILURE\" - The client was unable to establish a connection to other peer(s). \n- \"REALTIME_SERVER_CONNECTION_FAILURE\" - The client was unable to communicate with the server. \n- \"REALTIME_SERVER_ERROR\" - The client received an error response when it tried to communicate with the server. \n- \"REALTIME_TIMEOUT\" - The client timed out while waiting for a room."
    }
   }
  },
  "RoomList": {
   "id": "RoomList",
   "type": "object",
   "description": "This is a JSON template for a list of rooms.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The rooms.",
     "items": {
      "$ref": "Room"
     }
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomList.",
     "default": "games#roomList"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The pagination token for the next page of results."
    }
   }
  },
  "RoomModification": {
   "id": "RoomModification",
   "type": "object",
   "description": "This is a JSON template for room modification metadata.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomModification.",
     "default": "games#roomModification"
    },
    "modifiedTimestampMillis": {
     "type": "string",
     "description": "The timestamp at which they modified the room, in milliseconds since the epoch in UTC.",
     "format": "int64"
    },
    "participantId": {
     "type": "string",
     "description": "The ID of the participant that modified the room."
    }
   }
  },
  "RoomP2PStatus": {
   "id": "RoomP2PStatus",
   "type": "object",
   "description": "This is a JSON template for an update on the status of a peer in a room.",
   "properties": {
    "connectionSetupLatencyMillis": {
     "type": "integer",
     "description": "The amount of time in milliseconds it took to establish connections with this peer.",
     "format": "int32"
    },
    "error": {
     "type": "string",
     "description": "The error code in event of a failure.\nPossible values are:  \n- \"P2P_FAILED\" - The client failed to establish a P2P connection with the peer. \n- \"PRESENCE_FAILED\" - The client failed to register to receive P2P connections. \n- \"RELAY_SERVER_FAILED\" - The client received an error when trying to use the relay server to establish a P2P connection with the peer."
    },
    "error_reason": {
     "type": "string",
     "description": "More detailed diagnostic message returned in event of a failure."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomP2PStatus.",
     "default": "games#roomP2PStatus"
    },
    "participantId": {
     "type": "string",
     "description": "The ID of the participant."
    },
    "status": {
     "type": "string",
     "description": "The status of the peer in the room.\nPossible values are:  \n- \"CONNECTION_ESTABLISHED\" - The client established a P2P connection with the peer. \n- \"CONNECTION_FAILED\" - The client failed to establish directed presence with the peer."
    },
    "unreliableRoundtripLatencyMillis": {
     "type": "integer",
     "description": "The amount of time in milliseconds it took to send packets back and forth on the unreliable channel with this peer.",
     "format": "int32"
    }
   }
  },
  "RoomP2PStatuses": {
   "id": "RoomP2PStatuses",
   "type": "object",
   "description": "This is a JSON template for an update on the status of peers in a room.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomP2PStatuses.",
     "default": "games#roomP2PStatuses"
    },
    "updates": {
     "type": "array",
     "description": "The updates for the peers.",
     "items": {
      "$ref": "RoomP2PStatus"
     }
    }
   }
  },
  "RoomParticipant": {
   "id": "RoomParticipant",
   "type": "object",
   "description": "This is a JSON template for a participant in a room.",
   "properties": {
    "autoMatchedPlayer": {
     "$ref": "AnonymousPlayer",
     "description": "Information about a player that has been auto-matched against the requesting player. (Either player or autoMatchedPlayer will be set.)"
    },
    "capabilities": {
     "type": "array",
     "description": "The capabilities which can be used when communicating with this participant.",
     "items": {
      "type": "string"
     }
    },
    "clientAddress": {
     "$ref": "RoomClientAddress",
     "description": "Client address for the participant."
    },
    "connected": {
     "type": "boolean",
     "description": "True if this participant is in the fully connected set of peers in the room."
    },
    "id": {
     "type": "string",
     "description": "An identifier for the participant in the scope of the room. Cannot be used to identify a player across rooms or in other contexts."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomParticipant.",
     "default": "games#roomParticipant"
    },
    "leaveReason": {
     "type": "string",
     "description": "The reason the participant left the room; populated if the participant status is PARTICIPANT_LEFT.\nPossible values are:  \n- \"PLAYER_LEFT\" - The player explicitly chose to leave the room. \n- \"GAME_LEFT\" - The game chose to remove the player from the room. \n- \"ABANDONED\" - The player switched to another application and abandoned the room.\n- \"PEER_CONNECTION_FAILURE\" - The client was unable to establish or maintain a connection to other peer(s) in the room.\n- \"SERVER_ERROR\" - The client received an error response when it tried to communicate with the server. \n- \"TIMEOUT\" - The client timed out while waiting for players to join and connect. \n- \"PRESENCE_FAILURE\" - The client's XMPP connection ended abruptly."
    },
    "player": {
     "$ref": "Player",
     "description": "Information about the player. Not populated if this player was auto-matched against the requesting player. (Either player or autoMatchedPlayer will be set.)"
    },
    "status": {
     "type": "string",
     "description": "The status of the participant with respect to the room.\nPossible values are:  \n- \"PARTICIPANT_INVITED\" - The participant has been invited to join the room, but has not yet responded. \n- \"PARTICIPANT_JOINED\" - The participant has joined the room (either after creating it or accepting an invitation.) \n- \"PARTICIPANT_DECLINED\" - The participant declined an invitation to join the room. \n- \"PARTICIPANT_LEFT\" - The participant joined the room and then left it."
    }
   }
  },
  "RoomStatus": {
   "id": "RoomStatus",
   "type": "object",
   "description": "This is a JSON template for the status of a room that the player has joined.",
   "properties": {
    "autoMatchingStatus": {
     "$ref": "RoomAutoMatchStatus",
     "description": "Auto-matching status for this room. Not set if the room is not currently in the automatching queue."
    },
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#roomStatus.",
     "default": "games#roomStatus"
    },
    "participants": {
     "type": "array",
     "description": "The participants involved in the room, along with their statuses. Includes participants who have left or declined invitations.",
     "items": {
      "$ref": "RoomParticipant"
     }
    },
    "roomId": {
     "type": "string",
     "description": "Globally unique ID for a room."
    },
    "status": {
     "type": "string",
     "description": "The status of the room.\nPossible values are:  \n- \"ROOM_INVITING\" - One or more players have been invited and not responded. \n- \"ROOM_AUTO_MATCHING\" - One or more slots need to be filled by auto-matching. \n- \"ROOM_CONNECTING\" - Players have joined are connecting to each other (either before or after auto-matching). \n- \"ROOM_ACTIVE\" - All players have joined and connected to each other. \n- \"ROOM_DELETED\" - All joined players have left."
    },
    "statusVersion": {
     "type": "integer",
     "description": "The version of the status for the room: an increasing counter, used by the client to ignore out-of-order updates to room status.",
     "format": "int32"
    }
   }
  },
  "ScoreSubmission": {
   "id": "ScoreSubmission",
   "type": "object",
   "description": "This is a JSON template for a request to submit a score to leaderboards.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Uniquely identifies the type of this resource. Value is always the fixed string games#scoreSubmission.",
     "default": "games#scoreSubmission"
    },
    "leaderboardId": {
     "type": "string",
     "description": "The leaderboard this score is being submitted to."
    },
    "score": {
     "type": "string",
     "description": "The new score being submitted.",
     "format": "int64"
    }
   }
  }
 },
 "resources": {
  "achievementDefinitions": {
   "methods": {
    "list": {
     "id": "games.achievementDefinitions.list",
     "path": "achievements",
     "httpMethod": "GET",
     "description": "Lists all the achievement definitions for your application.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of achievement resources to return in the response, used for paging. For any response, the actual number of achievement resources returned may be less than the specified maxResults.",
       "format": "int32",
       "minimum": "1",
       "maximum": "200",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token returned by the previous request.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "AchievementDefinitionsListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    }
   }
  },
  "achievements": {
   "methods": {
    "increment": {
     "id": "games.achievements.increment",
     "path": "achievements/{achievementId}/increment",
     "httpMethod": "POST",
     "description": "Increments the steps of the achievement with the given ID for the currently authenticated player.",
     "parameters": {
      "achievementId": {
       "type": "string",
       "description": "The ID of the achievement used by this method.",
       "required": true,
       "location": "path"
      },
      "requestId": {
       "type": "string",
       "description": "A randomly generated numeric ID for each request specified by the caller. This number is used at the server to ensure that the increment is performed correctly across retries.",
       "format": "int64",
       "location": "query"
      },
      "stepsToIncrement": {
       "type": "integer",
       "description": "The number of steps to increment.",
       "required": true,
       "format": "int32",
       "minimum": "1",
       "location": "query"
      }
     },
     "parameterOrder": [
      "achievementId",
      "stepsToIncrement"
     ],
     "response": {
      "$ref": "AchievementIncrementResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "list": {
     "id": "games.achievements.list",
     "path": "players/{playerId}/achievements",
     "httpMethod": "GET",
     "description": "Lists the progress for all your application's achievements for the currently authenticated player.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of achievement resources to return in the response, used for paging. For any response, the actual number of achievement resources returned may be less than the specified maxResults.",
       "format": "int32",
       "minimum": "1",
       "maximum": "200",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token returned by the previous request.",
       "location": "query"
      },
      "playerId": {
       "type": "string",
       "description": "A player ID. A value of me may be used in place of the authenticated player's ID.",
       "required": true,
       "location": "path"
      },
      "state": {
       "type": "string",
       "description": "Tells the server to return only achievements with the specified state. If this parameter isn't specified, all achievements are returned.",
       "enum": [
        "ALL",
        "HIDDEN",
        "REVEALED",
        "UNLOCKED"
       ],
       "enumDescriptions": [
        "List all achievements. This is the default.",
        "List only hidden achievements.",
        "List only revealed achievements.",
        "List only unlocked achievements."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "playerId"
     ],
     "response": {
      "$ref": "PlayerAchievementListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "reveal": {
     "id": "games.achievements.reveal",
     "path": "achievements/{achievementId}/reveal",
     "httpMethod": "POST",
     "description": "Sets the state of the achievement with the given ID to REVEALED for the currently authenticated player.",
     "parameters": {
      "achievementId": {
       "type": "string",
       "description": "The ID of the achievement used by this method.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "achievementId"
     ],
     "response": {
      "$ref": "AchievementRevealResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "unlock": {
     "id": "games.achievements.unlock",
     "path": "achievements/{achievementId}/unlock",
     "httpMethod": "POST",
     "description": "Unlocks this achievement for the currently authenticated player.",
     "parameters": {
      "achievementId": {
       "type": "string",
       "description": "The ID of the achievement used by this method.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "achievementId"
     ],
     "response": {
      "$ref": "AchievementUnlockResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    }
   }
  },
  "applications": {
   "methods": {
    "get": {
     "id": "games.applications.get",
     "path": "applications/{applicationId}",
     "httpMethod": "GET",
     "description": "Retrieves the metadata of the application with the given ID. If the requested application is not available for the specified platformType, the returned response will not include any instance data.",
     "parameters": {
      "applicationId": {
       "type": "string",
       "description": "The application being requested.",
       "required": true,
       "location": "path"
      },
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "platformType": {
       "type": "string",
       "description": "Restrict application details returned to the specific platform.",
       "enum": [
        "ANDROID",
        "IOS",
        "WEB_APP"
       ],
       "enumDescriptions": [
        "Retrieve applications that can be played on Android.",
        "Retrieve applications that can be played on iOS.",
        "Retrieve applications that can be played on desktop web."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "applicationId"
     ],
     "response": {
      "$ref": "Application"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "played": {
     "id": "games.applications.played",
     "path": "applications/played",
     "httpMethod": "POST",
     "description": "Indicate that the the currently authenticated user is playing your application.",
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    }
   }
  },
  "leaderboards": {
   "methods": {
    "get": {
     "id": "games.leaderboards.get",
     "path": "leaderboards/{leaderboardId}",
     "httpMethod": "GET",
     "description": "Retrieves the metadata of the leaderboard with the given ID.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "leaderboardId": {
       "type": "string",
       "description": "The ID of the leaderboard.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "leaderboardId"
     ],
     "response": {
      "$ref": "Leaderboard"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "list": {
     "id": "games.leaderboards.list",
     "path": "leaderboards",
     "httpMethod": "GET",
     "description": "Lists all the leaderboard metadata for your application.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of leaderboards to return in the response. For any response, the actual number of leaderboards returned may be less than the specified maxResults.",
       "format": "int32",
       "minimum": "1",
       "maximum": "100",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token returned by the previous request.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "LeaderboardListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    }
   }
  },
  "players": {
   "methods": {
    "get": {
     "id": "games.players.get",
     "path": "players/{playerId}",
     "httpMethod": "GET",
     "description": "Retrieves the Player resource with the given ID. To retrieve the player for the currently authenticated user, set playerId to me.",
     "parameters": {
      "playerId": {
       "type": "string",
       "description": "A player ID. A value of me may be used in place of the authenticated player's ID.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "playerId"
     ],
     "response": {
      "$ref": "Player"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    }
   }
  },
  "revisions": {
   "methods": {
    "check": {
     "id": "games.revisions.check",
     "path": "revisions/check",
     "httpMethod": "GET",
     "description": "Checks whether the games client is out of date.",
     "parameters": {
      "clientRevision": {
       "type": "string",
       "description": "The revision of the client SDK used by your application.",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "clientRevision"
     ],
     "response": {
      "$ref": "RevisionCheckResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    }
   }
  },
  "rooms": {
   "methods": {
    "create": {
     "id": "games.rooms.create",
     "path": "rooms/create",
     "httpMethod": "POST",
     "description": "Create a room. For internal use by the Games SDK only. Calling this method directly is unsupported.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      }
     },
     "request": {
      "$ref": "RoomCreateRequest"
     },
     "response": {
      "$ref": "Room"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "decline": {
     "id": "games.rooms.decline",
     "path": "rooms/{roomId}/decline",
     "httpMethod": "POST",
     "description": "Decline an invitation to join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.",
     "parameters": {
      "roomId": {
       "type": "string",
       "description": "The ID of the room.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "roomId"
     ],
     "response": {
      "$ref": "Room"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "dismiss": {
     "id": "games.rooms.dismiss",
     "path": "rooms/{roomId}/dismiss",
     "httpMethod": "POST",
     "description": "Dismiss an invitation to join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.",
     "parameters": {
      "roomId": {
       "type": "string",
       "description": "The ID of the room.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "roomId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "get": {
     "id": "games.rooms.get",
     "path": "rooms/{roomId}",
     "httpMethod": "GET",
     "description": "Get the data for a room.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "Specify the preferred language to use to format room info.",
       "location": "query"
      },
      "roomId": {
       "type": "string",
       "description": "The ID of the room.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "roomId"
     ],
     "response": {
      "$ref": "Room"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "join": {
     "id": "games.rooms.join",
     "path": "rooms/{roomId}/join",
     "httpMethod": "POST",
     "description": "Join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.",
     "parameters": {
      "roomId": {
       "type": "string",
       "description": "The ID of the room.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "roomId"
     ],
     "request": {
      "$ref": "RoomJoinRequest"
     },
     "response": {
      "$ref": "Room"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "leave": {
     "id": "games.rooms.leave",
     "path": "rooms/{roomId}/leave",
     "httpMethod": "POST",
     "description": "Leave a room. For internal use by the Games SDK only. Calling this method directly is unsupported.",
     "parameters": {
      "roomId": {
       "type": "string",
       "description": "The ID of the room.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "roomId"
     ],
     "request": {
      "$ref": "RoomLeaveRequest"
     },
     "response": {
      "$ref": "Room"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "list": {
     "id": "games.rooms.list",
     "path": "rooms",
     "httpMethod": "GET",
     "description": "Returns invitations to join rooms.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of rooms to return in the response, used for paging. For any response, the actual number of rooms to return may be less than the specified maxResults.",
       "format": "int32",
       "minimum": "1",
       "maximum": "500",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token returned by the previous request.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "RoomList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "reportStatus": {
     "id": "games.rooms.reportStatus",
     "path": "rooms/{roomId}/reportstatus",
     "httpMethod": "POST",
     "description": "Updates sent by a client reporting the status of peers in a room. For internal use by the Games SDK only. Calling this method directly is unsupported.",
     "parameters": {
      "roomId": {
       "type": "string",
       "description": "The ID of the room.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "roomId"
     ],
     "request": {
      "$ref": "RoomP2PStatuses"
     },
     "response": {
      "$ref": "RoomStatus"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    }
   }
  },
  "scores": {
   "methods": {
    "get": {
     "id": "games.scores.get",
     "path": "players/{playerId}/leaderboards/{leaderboardId}/scores/{timeSpan}",
     "httpMethod": "GET",
     "description": "Get high scores and optionally, ranks in leaderboards for the currently authenticated player. For a specific time span, leaderboardId can be set to ALL to retrieve data for all leaderboards in a given time span.",
     "parameters": {
      "includeRankType": {
       "type": "string",
       "description": "The types of ranks to return. If the parameter is omitted, no ranks will be returned.",
       "enum": [
        "ALL",
        "PUBLIC",
        "SOCIAL"
       ],
       "enumDescriptions": [
        "Retrieve public and social ranks.",
        "Retrieve public ranks, if the player is sharing their gameplay activity publicly.",
        "Retrieve the social rank."
       ],
       "location": "query"
      },
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "leaderboardId": {
       "type": "string",
       "description": "The ID of the leaderboard.",
       "required": true,
       "location": "path"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.",
       "format": "int32",
       "minimum": "1",
       "maximum": "25",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token returned by the previous request.",
       "location": "query"
      },
      "playerId": {
       "type": "string",
       "description": "A player ID. A value of me may be used in place of the authenticated player's ID.",
       "required": true,
       "location": "path"
      },
      "timeSpan": {
       "type": "string",
       "description": "The time span for the scores and ranks you're requesting.",
       "required": true,
       "enum": [
        "ALL",
        "ALL_TIME",
        "DAILY",
        "WEEKLY"
       ],
       "enumDescriptions": [
        "Get the high scores for all time spans. If this is used, maxResults values will be ignored.",
        "Get the all time high score.",
        "List the top scores for the current day.",
        "List the top scores for the current week."
       ],
       "location": "path"
      }
     },
     "parameterOrder": [
      "playerId",
      "leaderboardId",
      "timeSpan"
     ],
     "response": {
      "$ref": "PlayerLeaderboardScoreListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "list": {
     "id": "games.scores.list",
     "path": "leaderboards/{leaderboardId}/scores/{collection}",
     "httpMethod": "GET",
     "description": "Lists the scores in a leaderboard, starting from the top.",
     "parameters": {
      "collection": {
       "type": "string",
       "description": "The collection of scores you're requesting.",
       "required": true,
       "enum": [
        "PUBLIC",
        "SOCIAL"
       ],
       "enumDescriptions": [
        "List all scores in the public leaderboard.",
        "List only social scores."
       ],
       "location": "path"
      },
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "leaderboardId": {
       "type": "string",
       "description": "The ID of the leaderboard.",
       "required": true,
       "location": "path"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.",
       "format": "int32",
       "minimum": "1",
       "maximum": "25",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token returned by the previous request.",
       "location": "query"
      },
      "timeSpan": {
       "type": "string",
       "description": "The time span for the scores and ranks you're requesting.",
       "required": true,
       "enum": [
        "ALL_TIME",
        "DAILY",
        "WEEKLY"
       ],
       "enumDescriptions": [
        "List the all-time top scores.",
        "List the top scores for the current day.",
        "List the top scores for the current week."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "leaderboardId",
      "collection",
      "timeSpan"
     ],
     "response": {
      "$ref": "LeaderboardScores"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "listWindow": {
     "id": "games.scores.listWindow",
     "path": "leaderboards/{leaderboardId}/window/{collection}",
     "httpMethod": "GET",
     "description": "Lists the scores in a leaderboard around (and including) a player's score.",
     "parameters": {
      "collection": {
       "type": "string",
       "description": "The collection of scores you're requesting.",
       "required": true,
       "enum": [
        "PUBLIC",
        "SOCIAL"
       ],
       "enumDescriptions": [
        "List all scores in the public leaderboard.",
        "List only social scores."
       ],
       "location": "path"
      },
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "leaderboardId": {
       "type": "string",
       "description": "The ID of the leaderboard.",
       "required": true,
       "location": "path"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.",
       "format": "int32",
       "minimum": "1",
       "maximum": "25",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token returned by the previous request.",
       "location": "query"
      },
      "resultsAbove": {
       "type": "integer",
       "description": "The preferred number of scores to return above the player's score. More scores may be returned if the player is at the bottom of the leaderboard; fewer may be returned if the player is at the top. Must be less than or equal to maxResults.",
       "format": "int32",
       "location": "query"
      },
      "returnTopIfAbsent": {
       "type": "boolean",
       "description": "True if the top scores should be returned when the player is not in the leaderboard. Defaults to true.",
       "location": "query"
      },
      "timeSpan": {
       "type": "string",
       "description": "The time span for the scores and ranks you're requesting.",
       "required": true,
       "enum": [
        "ALL_TIME",
        "DAILY",
        "WEEKLY"
       ],
       "enumDescriptions": [
        "List the all-time top scores.",
        "List the top scores for the current day.",
        "List the top scores for the current week."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "leaderboardId",
      "collection",
      "timeSpan"
     ],
     "response": {
      "$ref": "LeaderboardScores"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "submit": {
     "id": "games.scores.submit",
     "path": "leaderboards/{leaderboardId}/scores",
     "httpMethod": "POST",
     "description": "Submits a score to the specified leaderboard.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      },
      "leaderboardId": {
       "type": "string",
       "description": "The ID of the leaderboard.",
       "required": true,
       "location": "path"
      },
      "score": {
       "type": "string",
       "description": "The score you're submitting. The submitted score is ignored if it is worse than a previously submitted score, where worse depends on the leaderboard sort order. The meaning of the score value depends on the leaderboard format type. For fixed-point, the score represents the raw value. For time, the score represents elapsed time in milliseconds. For currency, the score represents a value in micro units.",
       "required": true,
       "format": "int64",
       "location": "query"
      }
     },
     "parameterOrder": [
      "leaderboardId",
      "score"
     ],
     "response": {
      "$ref": "PlayerScoreResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    },
    "submitMultiple": {
     "id": "games.scores.submitMultiple",
     "path": "leaderboards/scores",
     "httpMethod": "POST",
     "description": "Submits multiple scores to leaderboards.",
     "parameters": {
      "language": {
       "type": "string",
       "description": "The preferred language to use for strings returned by this method.",
       "location": "query"
      }
     },
     "request": {
      "$ref": "PlayerScoreSubmissionList"
     },
     "response": {
      "$ref": "PlayerScoreListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/plus.login"
     ]
    }
   }
  }
 }
}
