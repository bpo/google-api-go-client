{
 "kind": "discovery#restDescription",
 "id": "books:v1",
 "name": "books",
 "version": "v1",
 "title": "Books API",
 "description": "Lets you search for books and manage your Google Books library.",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/ebooks-16.png",
  "x32": "http://www.google.com/images/icons/product/ebooks-32.png"
 },
 "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
 "labels": [
  "labs"
 ],
 "protocol": "rest",
 "basePath": "/books/v1/",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/books": {
     "description": "Manage your books"
    }
   }
  }
 },
 "schemas": {
  "Bookshelf": {
   "id": "Bookshelf",
   "type": "object",
   "properties": {
    "access": {
     "type": "string",
     "description": "Whether this bookshelf is PUBLIC or PRIVATE."
    },
    "created": {
     "type": "string",
     "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).",
     "format": "date-time"
    },
    "description": {
     "type": "string",
     "description": "Description of this bookshelf."
    },
    "id": {
     "type": "integer",
     "description": "Id of this bookshelf, only unique by user.",
     "format": "int32"
    },
    "kind": {
     "type": "string",
     "description": "Resource type for bookshelf metadata.",
     "default": "books#bookshelf"
    },
    "selfLink": {
     "type": "string",
     "description": "URL to this resource."
    },
    "title": {
     "type": "string",
     "description": "Title of this bookshelf."
    },
    "updated": {
     "type": "string",
     "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).",
     "format": "date-time"
    },
    "volumeCount": {
     "type": "integer",
     "description": "Number of volumes in this bookshelf.",
     "format": "int32"
    },
    "volumesLastUpdated": {
     "type": "string",
     "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).",
     "format": "date-time"
    }
   }
  },
  "Bookshelves": {
   "id": "Bookshelves",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "description": "A list of bookshelves.",
     "items": {
      "$ref": "Bookshelf"
     }
    },
    "kind": {
     "type": "string",
     "description": "Resource type.",
     "default": "books#bookshelves"
    }
   }
  },
  "DownloadAccessRestriction": {
   "id": "DownloadAccessRestriction",
   "type": "object",
   "properties": {
    "deviceAllowed": {
     "type": "boolean",
     "description": "If restricted, whether access is granted for this (user, device, volume)."
    },
    "downloadsAcquired": {
     "type": "integer",
     "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).",
     "format": "int32"
    },
    "justAcquired": {
     "type": "boolean",
     "description": "If deviceAllowed, whether access was just acquired with this request."
    },
    "kind": {
     "type": "string",
     "description": "Resource type.",
     "default": "books#downloadAccessRestriction"
    },
    "maxDownloadDevices": {
     "type": "integer",
     "description": "If restricted, the maximum number of content download licenses for this volume.",
     "format": "int32"
    },
    "message": {
     "type": "string",
     "description": "Error/warning message."
    },
    "nonce": {
     "type": "string",
     "description": "Client nonce for verification. Download access and client-validation only."
    },
    "reasonCode": {
     "type": "string",
     "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS"
    },
    "restricted": {
     "type": "boolean",
     "description": "Whether this volume has any download access restrictions."
    },
    "signature": {
     "type": "string",
     "description": "Response signature."
    },
    "source": {
     "type": "string",
     "description": "Client app identifier for verification. Download access and client-validation only."
    },
    "volumeId": {
     "type": "string",
     "description": "Identifies the volume for which this entry applies."
    }
   }
  },
  "ReadingPosition": {
   "id": "ReadingPosition",
   "type": "object",
   "properties": {
    "epubCfiPosition": {
     "type": "string",
     "description": "Position in an EPUB as a CFI."
    },
    "gbImagePosition": {
     "type": "string",
     "description": "Position in a volume for image-based content."
    },
    "gbTextPosition": {
     "type": "string",
     "description": "Position in a volume for text-based content."
    },
    "kind": {
     "type": "string",
     "description": "Resource type for a reading position.",
     "default": "books#readingPosition"
    },
    "pdfPosition": {
     "type": "string",
     "description": "Position in a PDF file."
    },
    "updated": {
     "type": "string",
     "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
     "format": "date-time"
    },
    "volumeId": {
     "type": "string",
     "description": "Volume id associated with this reading position."
    }
   }
  },
  "Review": {
   "id": "Review",
   "type": "object",
   "properties": {
    "author": {
     "type": "object",
     "description": "Author of this review.",
     "properties": {
      "displayName": {
       "type": "string",
       "description": "Name of this person."
      }
     }
    },
    "content": {
     "type": "string",
     "description": "Review text."
    },
    "date": {
     "type": "string",
     "description": "Date of this review."
    },
    "fullTextUrl": {
     "type": "string",
     "description": "URL for the full review text, for reviews gathered from the web."
    },
    "kind": {
     "type": "string",
     "description": "Resource type for a review.",
     "default": "books#review"
    },
    "rating": {
     "type": "string",
     "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED."
    },
    "source": {
     "type": "object",
     "description": "Information regarding the source of this review, when the review is not from a Google Books user.",
     "properties": {
      "description": {
       "type": "string",
       "description": "Name of the source."
      },
      "extraDescription": {
       "type": "string",
       "description": "Extra text about the source of the review."
      },
      "url": {
       "type": "string",
       "description": "URL of the source of the review."
      }
     }
    },
    "title": {
     "type": "string",
     "description": "Title for this review."
    },
    "type": {
     "type": "string",
     "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER."
    },
    "volumeId": {
     "type": "string",
     "description": "Volume that this review is for."
    }
   }
  },
  "Volume": {
   "id": "Volume",
   "type": "object",
   "properties": {
    "accessInfo": {
     "type": "object",
     "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).",
     "properties": {
      "accessViewStatus": {
       "type": "string",
       "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)"
      },
      "country": {
       "type": "string",
       "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)"
      },
      "downloadAccess": {
       "$ref": "DownloadAccessRestriction",
       "description": "Information about a volume's download license access restrictions."
      },
      "embeddable": {
       "type": "boolean",
       "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API."
      },
      "epub": {
       "type": "object",
       "description": "Information about epub content. (In LITE projection.)",
       "properties": {
        "acsTokenLink": {
         "type": "string",
         "description": "URL to retrieve ACS token for epub download. (In LITE projection.)"
        },
        "downloadLink": {
         "type": "string",
         "description": "URL to download epub. (In LITE projection.)"
        }
       }
      },
      "pdf": {
       "type": "object",
       "description": "Information about pdf content. (In LITE projection.)",
       "properties": {
        "acsTokenLink": {
         "type": "string",
         "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
        },
        "downloadLink": {
         "type": "string",
         "description": "URL to download pdf. (In LITE projection.)"
        }
       }
      },
      "publicDomain": {
       "type": "boolean",
       "description": "Whether or not this book is public domain in the country listed above."
      },
      "textToSpeechPermission": {
       "type": "string",
       "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."
      },
      "viewability": {
       "type": "string",
       "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES."
      }
     }
    },
    "etag": {
     "type": "string",
     "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)"
    },
    "id": {
     "type": "string",
     "description": "Unique identifier for a volume. (In LITE projection.)"
    },
    "kind": {
     "type": "string",
     "description": "Resource type for a volume. (In LITE projection.)",
     "default": "books#volume"
    },
    "saleInfo": {
     "type": "object",
     "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
     "properties": {
      "buyLink": {
       "type": "string",
       "description": "URL to purchase this volume on the Google Books site. (In LITE projection)"
      },
      "country": {
       "type": "string",
       "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)"
      },
      "isEbook": {
       "type": "boolean",
       "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf)."
      },
      "listPrice": {
       "type": "object",
       "description": "Suggested retail price. (In LITE projection.)",
       "properties": {
        "amount": {
         "type": "number",
         "description": "Amount in the currency listed below. (In LITE projection.)",
         "format": "double"
        },
        "currencyCode": {
         "type": "string",
         "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
        }
       }
      },
      "onSaleDate": {
       "type": "string",
       "description": "The date on which this book is available for sale.",
       "format": "date-time"
      },
      "retailPrice": {
       "type": "object",
       "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)",
       "properties": {
        "amount": {
         "type": "number",
         "description": "Amount in the currency listed below. (In LITE projection.)",
         "format": "double"
        },
        "currencyCode": {
         "type": "string",
         "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
        }
       }
      },
      "saleability": {
       "type": "string",
       "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FREE, NOT_FOR_SALE, or FOR_PREORDER."
      }
     }
    },
    "selfLink": {
     "type": "string",
     "description": "URL to this resource. (In LITE projection.)"
    },
    "userInfo": {
     "type": "object",
     "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)",
     "properties": {
      "isPreordered": {
       "type": "boolean",
       "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
      },
      "isPurchased": {
       "type": "boolean",
       "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)"
      },
      "readingPosition": {
       "$ref": "ReadingPosition",
       "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)"
      },
      "review": {
       "$ref": "Review",
       "description": "This user's review of this volume, if one exists."
      },
      "updated": {
       "type": "string",
       "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).",
       "format": "date-time"
      }
     }
    },
    "volumeInfo": {
     "type": "object",
     "description": "General volume information.",
     "properties": {
      "authors": {
       "type": "array",
       "description": "The names of the authors and/or editors for this volume. (In LITE projection)",
       "items": {
        "type": "string"
       }
      },
      "averageRating": {
       "type": "number",
       "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
       "format": "double"
      },
      "categories": {
       "type": "array",
       "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
       "items": {
        "type": "string"
       }
      },
      "contentVersion": {
       "type": "string",
       "description": "An identifier for the version of the volume content (text & images). (In LITE projection)"
      },
      "description": {
       "type": "string",
       "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)"
      },
      "dimensions": {
       "type": "object",
       "description": "Physical dimensions of this volume.",
       "properties": {
        "height": {
         "type": "string",
         "description": "Height or length of this volume (in cm)."
        },
        "thickness": {
         "type": "string",
         "description": "Thickness of this volume (in cm)."
        },
        "width": {
         "type": "string",
         "description": "Width of this volume (in cm)."
        }
       }
      },
      "imageLinks": {
       "type": "object",
       "description": "A list of image links for all the sizes that are available. (In LITE projection.)",
       "properties": {
        "extraLarge": {
         "type": "string",
         "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
        },
        "large": {
         "type": "string",
         "description": "Image link for large size (width of ~800 pixels). (In LITE projection)"
        },
        "medium": {
         "type": "string",
         "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)"
        },
        "small": {
         "type": "string",
         "description": "Image link for small size (width of ~300 pixels). (In LITE projection)"
        },
        "smallThumbnail": {
         "type": "string",
         "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)"
        },
        "thumbnail": {
         "type": "string",
         "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)"
        }
       }
      },
      "industryIdentifiers": {
       "type": "array",
       "description": "Industry standard identifiers for this volume.",
       "items": {
        "type": "object",
        "properties": {
         "identifier": {
          "type": "string",
          "description": "Industry specific volume identifier."
         },
         "type": {
          "type": "string",
          "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER."
         }
        }
       }
      },
      "infoLink": {
       "type": "string",
       "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
      },
      "language": {
       "type": "string",
       "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc."
      },
      "mainCategory": {
       "type": "string",
       "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight."
      },
      "pageCount": {
       "type": "integer",
       "description": "Total number of pages.",
       "format": "int32"
      },
      "previewLink": {
       "type": "string",
       "description": "URL to preview this volume on the Google Books site."
      },
      "printType": {
       "type": "string",
       "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE."
      },
      "publishedDate": {
       "type": "string",
       "description": "Date of publication. (In LITE projection.)"
      },
      "publisher": {
       "type": "string",
       "description": "Publisher of this volume. (In LITE projection.)"
      },
      "ratingsCount": {
       "type": "integer",
       "description": "The number of review ratings for this volume.",
       "format": "int32"
      },
      "subtitle": {
       "type": "string",
       "description": "Volume subtitle. (In LITE projection.)"
      },
      "title": {
       "type": "string",
       "description": "Volume title. (In LITE projection.)"
      }
     }
    }
   }
  },
  "Volumes": {
   "id": "Volumes",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "description": "A list of volumes.",
     "items": {
      "$ref": "Volume"
     }
    },
    "kind": {
     "type": "string",
     "description": "Resource type.",
     "default": "books#volumes"
    },
    "totalItems": {
     "type": "integer",
     "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.",
     "format": "int32"
    }
   }
  }
 },
 "resources": {
  "bookshelves": {
   "methods": {
    "get": {
     "id": "books.bookshelves.get",
     "path": "users/{userId}/bookshelves/{shelf}",
     "httpMethod": "GET",
     "description": "Retrieves a specific bookshelf for the specified user.",
     "parameters": {
      "country": {
       "type": "string",
       "description": "ISO-3166-1 code to override the IP-based location.",
       "location": "query"
      },
      "shelf": {
       "type": "string",
       "description": "Id of bookshelf to retrieve.",
       "required": true,
       "location": "path"
      },
      "source": {
       "type": "string",
       "description": "String to identify the originator of this request.",
       "location": "query"
      },
      "userId": {
       "type": "string",
       "description": "Id of user for whom to retrieve bookshelves.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "userId",
      "shelf"
     ],
     "response": {
      "$ref": "Bookshelf"
     },
     "scopes": [
      "https://www.googleapis.com/auth/books"
     ]
    },
    "list": {
     "id": "books.bookshelves.list",
     "path": "users/{userId}/bookshelves",
     "httpMethod": "GET",
     "description": "Retrieves a list of public bookshelves for the specified user.",
     "parameters": {
      "country": {
       "type": "string",
       "description": "ISO-3166-1 code to override the IP-based location.",
       "location": "query"
      },
      "source": {
       "type": "string",
       "description": "String to identify the originator of this request.",
       "location": "query"
      },
      "userId": {
       "type": "string",
       "description": "Id of user for whom to retrieve bookshelves.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "userId"
     ],
     "response": {
      "$ref": "Bookshelves"
     },
     "scopes": [
      "https://www.googleapis.com/auth/books"
     ]
    }
   },
   "resources": {
    "volumes": {
     "methods": {
      "list": {
       "id": "books.bookshelves.volumes.list",
       "path": "users/{userId}/bookshelves/{shelf}/volumes",
       "httpMethod": "GET",
       "description": "Retrieves volumes in a specific bookshelf for the specified user.",
       "parameters": {
        "country": {
         "type": "string",
         "description": "ISO-3166-1 code to override the IP-based location.",
         "location": "query"
        },
        "maxResults": {
         "type": "integer",
         "description": "Maximum number of results to return",
         "format": "uint32",
         "minimum": "0",
         "location": "query"
        },
        "shelf": {
         "type": "string",
         "description": "Id of bookshelf to retrieve volumes.",
         "required": true,
         "location": "path"
        },
        "showPreorders": {
         "type": "boolean",
         "description": "Set to true to show pre-ordered books. Defaults to false.",
         "location": "query"
        },
        "source": {
         "type": "string",
         "description": "String to identify the originator of this request.",
         "location": "query"
        },
        "startIndex": {
         "type": "integer",
         "description": "Index of the first element to return (starts at 0)",
         "format": "uint32",
         "minimum": "0",
         "location": "query"
        },
        "userId": {
         "type": "string",
         "description": "Id of user for whom to retrieve bookshelf volumes.",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "userId",
        "shelf"
       ],
       "response": {
        "$ref": "Volumes"
       },
       "scopes": [
        "https://www.googleapis.com/auth/books"
       ]
      }
     }
    }
   }
  },
  "mylibrary": {
   "resources": {
    "bookshelves": {
     "methods": {
      "addVolume": {
       "id": "books.mylibrary.bookshelves.addVolume",
       "path": "mylibrary/bookshelves/{shelf}/addVolume",
       "httpMethod": "POST",
       "description": "Adds a volume to a bookshelf.",
       "parameters": {
        "country": {
         "type": "string",
         "description": "ISO-3166-1 code to override the IP-based location.",
         "location": "query"
        },
        "shelf": {
         "type": "string",
         "description": "Id of bookshelf to which to add a volume.",
         "required": true,
         "location": "path"
        },
        "source": {
         "type": "string",
         "description": "String to identify the originator of this request.",
         "location": "query"
        },
        "volumeId": {
         "type": "string",
         "description": "Id of volume to add.",
         "required": true,
         "location": "query"
        }
       },
       "parameterOrder": [
        "shelf",
        "volumeId"
       ],
       "scopes": [
        "https://www.googleapis.com/auth/books"
       ]
      },
      "clearVolumes": {
       "id": "books.mylibrary.bookshelves.clearVolumes",
       "path": "mylibrary/bookshelves/{shelf}/clearVolumes",
       "httpMethod": "POST",
       "description": "Clears all volumes from a bookshelf.",
       "parameters": {
        "country": {
         "type": "string",
         "description": "ISO-3166-1 code to override the IP-based location.",
         "location": "query"
        },
        "shelf": {
         "type": "string",
         "description": "Id of bookshelf from which to remove a volume.",
         "required": true,
         "location": "path"
        },
        "source": {
         "type": "string",
         "description": "String to identify the originator of this request.",
         "location": "query"
        }
       },
       "parameterOrder": [
        "shelf"
       ],
       "scopes": [
        "https://www.googleapis.com/auth/books"
       ]
      },
      "get": {
       "id": "books.mylibrary.bookshelves.get",
       "path": "mylibrary/bookshelves/{shelf}",
       "httpMethod": "GET",
       "description": "Retrieves a specific bookshelf belonging to the authenticated user.",
       "parameters": {
        "country": {
         "type": "string",
         "description": "ISO-3166-1 code to override the IP-based location.",
         "location": "query"
        },
        "shelf": {
         "type": "string",
         "description": "Id of bookshelf to retrieve.",
         "required": true,
         "location": "path"
        },
        "source": {
         "type": "string",
         "description": "String to identify the originator of this request.",
         "location": "query"
        }
       },
       "parameterOrder": [
        "shelf"
       ],
       "response": {
        "$ref": "Bookshelf"
       },
       "scopes": [
        "https://www.googleapis.com/auth/books"
       ]
      },
      "list": {
       "id": "books.mylibrary.bookshelves.list",
       "path": "mylibrary/bookshelves",
       "httpMethod": "GET",
       "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
       "parameters": {
        "country": {
         "type": "string",
         "description": "ISO-3166-1 code to override the IP-based location.",
         "location": "query"
        },
        "source": {
         "type": "string",
         "description": "String to identify the originator of this request.",
         "location": "query"
        }
       },
       "response": {
        "$ref": "Bookshelves"
       },
       "scopes": [
        "https://www.googleapis.com/auth/books"
       ]
      },
      "removeVolume": {
       "id": "books.mylibrary.bookshelves.removeVolume",
       "path": "mylibrary/bookshelves/{shelf}/removeVolume",
       "httpMethod": "POST",
       "description": "Removes a volume from a bookshelf.",
       "parameters": {
        "country": {
         "type": "string",
         "description": "ISO-3166-1 code to override the IP-based location.",
         "location": "query"
        },
        "shelf": {
         "type": "string",
         "description": "Id of bookshelf from which to remove a volume.",
         "required": true,
         "location": "path"
        },
        "source": {
         "type": "string",
         "description": "String to identify the originator of this request.",
         "location": "query"
        },
        "volumeId": {
         "type": "string",
         "description": "Id of volume to remove.",
         "required": true,
         "location": "query"
        }
       },
       "parameterOrder": [
        "shelf",
        "volumeId"
       ],
       "scopes": [
        "https://www.googleapis.com/auth/books"
       ]
      }
     },
     "resources": {
      "volumes": {
       "methods": {
        "list": {
         "id": "books.mylibrary.bookshelves.volumes.list",
         "path": "mylibrary/bookshelves/{shelf}/volumes",
         "httpMethod": "GET",
         "description": "Gets volume information for volumes on a bookshelf.",
         "parameters": {
          "country": {
           "type": "string",
           "description": "ISO-3166-1 code to override the IP-based location.",
           "location": "query"
          },
          "maxResults": {
           "type": "integer",
           "description": "Maximum number of results to return",
           "format": "uint32",
           "minimum": "0",
           "location": "query"
          },
          "projection": {
           "type": "string",
           "description": "Restrict information returned to a set of selected fields.",
           "enum": [
            "full",
            "lite"
           ],
           "enumDescriptions": [
            "Includes all volume data.",
            "Includes a subset of fields in volumeInfo and accessInfo."
           ],
           "location": "query"
          },
          "q": {
           "type": "string",
           "description": "Full-text search query string in this bookshelf.",
           "location": "query"
          },
          "shelf": {
           "type": "string",
           "description": "The bookshelf id or name retrieve volumes for.",
           "location": "path"
          },
          "showPreorders": {
           "type": "boolean",
           "description": "Set to true to show pre-ordered books. Defaults to false.",
           "location": "query"
          },
          "source": {
           "type": "string",
           "description": "String to identify the originator of this request.",
           "location": "query"
          },
          "startIndex": {
           "type": "integer",
           "description": "Index of the first element to return (starts at 0)",
           "format": "uint32",
           "minimum": "0",
           "location": "query"
          }
         },
         "parameterOrder": [
          "shelf"
         ],
         "response": {
          "$ref": "Volumes"
         },
         "scopes": [
          "https://www.googleapis.com/auth/books"
         ]
        }
       }
      }
     }
    }
   }
  },
  "volumes": {
   "methods": {
    "get": {
     "id": "books.volumes.get",
     "path": "volumes/{volumeId}",
     "httpMethod": "GET",
     "description": "Gets volume information for a single volume.",
     "parameters": {
      "country": {
       "type": "string",
       "description": "ISO-3166-1 code to override the IP-based location.",
       "location": "query"
      },
      "partner": {
       "type": "string",
       "description": "Identifier of partner for whom to brand results.",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Restrict information returned to a set of selected fields.",
       "enum": [
        "full",
        "lite"
       ],
       "enumDescriptions": [
        "Includes all volume data.",
        "Includes a subset of fields in volumeInfo and accessInfo."
       ],
       "location": "query"
      },
      "source": {
       "type": "string",
       "description": "String to identify the originator of this request.",
       "location": "query"
      },
      "volumeId": {
       "type": "string",
       "description": "Id of volume to retrieve.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "volumeId"
     ],
     "response": {
      "$ref": "Volume"
     },
     "scopes": [
      "https://www.googleapis.com/auth/books"
     ]
    },
    "list": {
     "id": "books.volumes.list",
     "path": "volumes",
     "httpMethod": "GET",
     "description": "Performs a book search.",
     "parameters": {
      "country": {
       "type": "string",
       "description": "ISO-3166-1 code to override the IP-based location.",
       "location": "query"
      },
      "download": {
       "type": "string",
       "description": "Restrict to volumes by download availability.",
       "enum": [
        "epub"
       ],
       "enumDescriptions": [
        "All volumes with epub."
       ],
       "location": "query"
      },
      "filter": {
       "type": "string",
       "description": "Filter search results.",
       "enum": [
        "ebooks",
        "free-ebooks",
        "full",
        "paid-ebooks",
        "partial"
       ],
       "enumDescriptions": [
        "All Google eBooks.",
        "Google eBook with full volume text viewability.",
        "Public can view entire volume text.",
        "Google eBook with a price.",
        "Public able to see parts of text."
       ],
       "location": "query"
      },
      "langRestrict": {
       "type": "string",
       "description": "Restrict results to books with this language code.",
       "location": "query"
      },
      "libraryRestrict": {
       "type": "string",
       "description": "Restrict search to this user's library.",
       "enum": [
        "my-library",
        "no-restrict"
       ],
       "enumDescriptions": [
        "Restrict to the user's library, any shelf.",
        "Do not restrict based on user's library."
       ],
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of results to return.",
       "format": "uint32",
       "minimum": "0",
       "maximum": "40",
       "location": "query"
      },
      "orderBy": {
       "type": "string",
       "description": "Sort search results.",
       "enum": [
        "newest",
        "relevance"
       ],
       "enumDescriptions": [
        "Most recently published.",
        "Relevance to search terms."
       ],
       "location": "query"
      },
      "partner": {
       "type": "string",
       "description": "Identifier of partner for whom to restrict and brand results.",
       "location": "query"
      },
      "printType": {
       "type": "string",
       "description": "Restrict to books or magazines.",
       "enum": [
        "all",
        "books",
        "magazines"
       ],
       "enumDescriptions": [
        "All volume content types.",
        "Just books.",
        "Just magazines."
       ],
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Restrict information returned to a set of selected fields.",
       "enum": [
        "full",
        "lite"
       ],
       "enumDescriptions": [
        "Includes all volume data.",
        "Includes a subset of fields in volumeInfo and accessInfo."
       ],
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Full-text search query string.",
       "required": true,
       "location": "query"
      },
      "showPreorders": {
       "type": "boolean",
       "description": "Set to true to show books available for preorder. Defaults to false.",
       "location": "query"
      },
      "source": {
       "type": "string",
       "description": "String to identify the originator of this request.",
       "location": "query"
      },
      "startIndex": {
       "type": "integer",
       "description": "Index of the first result to return (starts at 0)",
       "format": "uint32",
       "minimum": "0",
       "location": "query"
      }
     },
     "parameterOrder": [
      "q"
     ],
     "response": {
      "$ref": "Volumes"
     },
     "scopes": [
      "https://www.googleapis.com/auth/books"
     ]
    }
   }
  }
 }
}
