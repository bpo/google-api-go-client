{
 "kind": "discovery#restDescription",
 "discoveryVersion": "v1",
 "id": "drive:v2",
 "name": "drive",
 "version": "v2",
 "revision": "20120501",
 "title": "Drive API",
 "description": "The API to interact with Drive.",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "documentationLink": "https://developers.google.com/drive/",
 "protocol": "rest",
 "baseUrl": "https://www.googleapis.com/drive/v2/",
 "basePath": "/drive/v2/",
 "rootUrl": "https://www.googleapis.com/",
 "servicePath": "drive/v2/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/drive": {
     "description": "View and manage the files and documents in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.apps.readonly": {
     "description": "New service: https://www.googleapis.com/auth/drive.apps.readonly"
    },
    "https://www.googleapis.com/auth/drive.file": {
     "description": "View and manage Google Drive files that you have opened or created with this app"
    },
    "https://www.googleapis.com/auth/drive.metadata.readonly": {
     "description": "View metadata for files and documents in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.readonly": {
     "description": "View the files and documents in your Google Drive"
    }
   }
  }
 },
 "schemas": {
  "About": {
   "id": "About",
   "type": "object",
   "description": "An item with user information and settings.",
   "properties": {
    "additionalRoleInfo": {
     "type": "array",
     "description": "Additional ACL role info.",
     "items": {
      "type": "object",
      "properties": {
       "roleSets": {
        "type": "array",
        "description": "The role sets for this role info item.",
        "items": {
         "type": "object",
         "properties": {
          "additionalRoles": {
           "type": "array",
           "description": "The list of additional roles for this role set.",
           "items": {
            "type": "string"
           }
          },
          "primaryRole": {
           "type": "string",
           "description": "The primary role for this role set."
          }
         }
        }
       },
       "type": {
        "type": "string",
        "description": "The content type for this ACL role info item."
       }
      }
     }
    },
    "domainSharingPolicy": {
     "type": "string",
     "description": "The domain sharing policy for the current user."
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the item."
    },
    "exportFormats": {
     "type": "array",
     "description": "The allowable export formats.",
     "items": {
      "type": "object",
      "properties": {
       "source": {
        "type": "string",
        "description": "The content type to convert from."
       },
       "targets": {
        "type": "array",
        "description": "The possible content types to convert to.",
        "items": {
         "type": "string"
        }
       }
      }
     }
    },
    "features": {
     "type": "array",
     "description": "List of additional features enabled on this account.",
     "items": {
      "type": "object",
      "properties": {
       "featureName": {
        "type": "string",
        "description": "The name of the feature."
       },
       "featureRate": {
        "type": "number",
        "description": "The request limit rate for this feature, in queries per second.",
        "format": "double"
       }
      }
     }
    },
    "importFormats": {
     "type": "array",
     "description": "The allowable import formats.",
     "items": {
      "type": "object",
      "properties": {
       "source": {
        "type": "string",
        "description": "The imported file's content type to convert from."
       },
       "targets": {
        "type": "array",
        "description": "The possible content types to convert to.",
        "items": {
         "type": "string"
        }
       }
      }
     }
    },
    "isCurrentAppInstalled": {
     "type": "boolean",
     "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#about.",
     "default": "drive#about"
    },
    "largestChangeId": {
     "type": "string",
     "description": "The largest change id.",
     "format": "int64"
    },
    "maxUploadSizes": {
     "type": "array",
     "description": "List of max upload sizes for each file type.",
     "items": {
      "type": "object",
      "properties": {
       "size": {
        "type": "string",
        "description": "The max upload size for this type.",
        "format": "int64"
       },
       "type": {
        "type": "string",
        "description": "The file type."
       }
      }
     }
    },
    "name": {
     "type": "string",
     "description": "The name of the current user."
    },
    "permissionId": {
     "type": "string",
     "description": "The current user's ID as visible in the permissions collection."
    },
    "quotaBytesTotal": {
     "type": "string",
     "description": "The total number of quota bytes.",
     "format": "int64"
    },
    "quotaBytesUsed": {
     "type": "string",
     "description": "The number of quota bytes used.",
     "format": "int64"
    },
    "quotaBytesUsedInTrash": {
     "type": "string",
     "description": "The number of quota bytes used by trashed items.",
     "format": "int64"
    },
    "remainingChangeIds": {
     "type": "string",
     "description": "The number of remaining change ids.",
     "format": "int64"
    },
    "rootFolderId": {
     "type": "string",
     "description": "The id of the root folder."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this item."
    }
   }
  },
  "App": {
   "id": "App",
   "type": "object",
   "description": "Information about a third-party application which the user has installed or given access to Google Drive.",
   "properties": {
    "authorized": {
     "type": "boolean",
     "description": "Whether the app is authorized to access data on the user's Drive."
    },
    "icons": {
     "type": "array",
     "description": "The various icons for the app.",
     "items": {
      "type": "object",
      "properties": {
       "category": {
        "type": "string",
        "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
       },
       "iconUrl": {
        "type": "string",
        "description": "URL for the icon."
       },
       "size": {
        "type": "integer",
        "description": "Size of the icon. Represented as the maximum of the width and height.",
        "format": "int32"
       }
      }
     }
    },
    "id": {
     "type": "string",
     "description": "The ID of the app."
    },
    "installed": {
     "type": "boolean",
     "description": "Whether the app is installed."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#app.",
     "default": "drive#app"
    },
    "name": {
     "type": "string",
     "description": "The name of the app."
    },
    "objectType": {
     "type": "string",
     "description": "The name of the type of object this app creates."
    },
    "primaryFileExtensions": {
     "type": "array",
     "description": "The list of primary file extensions.",
     "items": {
      "type": "string"
     }
    },
    "primaryMimeTypes": {
     "type": "array",
     "description": "The list of primary mime types.",
     "items": {
      "type": "string"
     }
    },
    "productUrl": {
     "type": "string",
     "description": "The product URL."
    },
    "secondaryFileExtensions": {
     "type": "array",
     "description": "The list of secondary file extensions.",
     "items": {
      "type": "string"
     }
    },
    "secondaryMimeTypes": {
     "type": "array",
     "description": "The list of secondary mime types.",
     "items": {
      "type": "string"
     }
    },
    "supportsCreate": {
     "type": "boolean",
     "description": "Whether this app supports creating new objects."
    },
    "supportsImport": {
     "type": "boolean",
     "description": "Whether this app supports importing Google Docs."
    }
   }
  },
  "AppList": {
   "id": "AppList",
   "type": "object",
   "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of apps.",
     "items": {
      "$ref": "App"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#appList.",
     "default": "drive#appList"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "Change": {
   "id": "Change",
   "type": "object",
   "description": "Representation of a change to a file.",
   "properties": {
    "deleted": {
     "type": "boolean",
     "description": "Whether the file has been deleted."
    },
    "file": {
     "$ref": "File",
     "description": "The updated state of the file. Present if the file has not been deleted."
    },
    "fileId": {
     "type": "string",
     "description": "The ID of the file associated with this change."
    },
    "id": {
     "type": "string",
     "description": "The ID of the change.",
     "format": "uint64"
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#change.",
     "default": "drive#change"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this change."
    }
   }
  },
  "ChangeList": {
   "id": "ChangeList",
   "type": "object",
   "description": "A list of changes for a user.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of changes.",
     "items": {
      "$ref": "Change"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#changeList.",
     "default": "drive#changeList"
    },
    "largestChangeId": {
     "type": "string",
     "description": "The current largest change ID.",
     "format": "uint64"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of changes."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of changes."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "ChildList": {
   "id": "ChildList",
   "type": "object",
   "description": "A list of children of a file.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of children.",
     "items": {
      "$ref": "ChildReference"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#childList.",
     "default": "drive#childList"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of children."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of children."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "ChildReference": {
   "id": "ChildReference",
   "type": "object",
   "description": "A reference to a file's child.",
   "properties": {
    "childLink": {
     "type": "string",
     "description": "A link to the child."
    },
    "id": {
     "type": "string",
     "description": "The ID of the child."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#childReference.",
     "default": "drive#childReference"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this reference."
    }
   }
  },
  "File": {
   "id": "File",
   "type": "object",
   "description": "The metadata for a file.",
   "properties": {
    "alternateLink": {
     "type": "string",
     "description": "A link for opening the file in a browser."
    },
    "createdDate": {
     "type": "string",
     "description": "Create time for this file (formatted ISO8601 timestamp).",
     "format": "date-time"
    },
    "description": {
     "type": "string",
     "description": "A short description of the file."
    },
    "downloadUrl": {
     "type": "string",
     "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
    },
    "editable": {
     "type": "boolean",
     "description": "Whether the file can be edited by the current user."
    },
    "embedLink": {
     "type": "string",
     "description": "A link for embedding the file."
    },
    "etag": {
     "type": "string",
     "description": "ETag of the file."
    },
    "exportLinks": {
     "type": "object",
     "description": "Links for exporting Google Docs to specific formats.",
     "additionalProperties": {
      "type": "string",
      "description": "A mapping from export format to URL"
     }
    },
    "fileExtension": {
     "type": "string",
     "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it on title when creating the file. This will only be populated on files with content stored in Drive."
    },
    "fileSize": {
     "type": "string",
     "description": "The size of the file in bytes. This will only be populated on files with content stored in Drive.",
     "format": "int64"
    },
    "id": {
     "type": "string",
     "description": "The id of the file."
    },
    "indexableText": {
     "type": "object",
     "description": "Indexable text attributes for the file (can only be written)",
     "properties": {
      "text": {
       "type": "string",
       "description": "The text to be indexed for this file"
      }
     }
    },
    "kind": {
     "type": "string",
     "description": "The type of file. This is always drive#file.",
     "default": "drive#file"
    },
    "labels": {
     "type": "object",
     "description": "A group of labels for the file.",
     "properties": {
      "hidden": {
       "type": "boolean",
       "description": "Whether this file is hidden from the user."
      },
      "restricted": {
       "type": "boolean",
       "description": "Whether viewers are prevented from downloading this file."
      },
      "starred": {
       "type": "boolean",
       "description": "Whether this file is starred by the user."
      },
      "trashed": {
       "type": "boolean",
       "description": "Whether this file has been trashed."
      },
      "viewed": {
       "type": "boolean",
       "description": "Whether this file has been viewed by this user."
      }
     }
    },
    "lastModifyingUserName": {
     "type": "string",
     "description": "Name of the last user to modify this file. This will only be populated if a user has edited this file."
    },
    "lastViewedByMeDate": {
     "type": "string",
     "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "md5Checksum": {
     "type": "string",
     "description": "An MD5 checksum for the content of this file. This will only be populated on files with content stored in Drive."
    },
    "mimeType": {
     "type": "string",
     "description": "The MIME type of the file."
    },
    "modifiedByMeDate": {
     "type": "string",
     "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "modifiedDate": {
     "type": "string",
     "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "originalFilename": {
     "type": "string",
     "description": "The filename when uploading this file. This will only be populated on files with content stored in Drive."
    },
    "ownerNames": {
     "type": "array",
     "description": "Name(s) of the owner(s) of this file.",
     "items": {
      "type": "string"
     }
    },
    "parents": {
     "type": "array",
     "description": "Collection of parent folders which contain this file.\nOn insert, setting this field will put the file in all of the provided folders. If no folders are provided, the file will be placed in the default root folder. On update, this field is ignored.",
     "items": {
      "$ref": "ParentReference"
     }
    },
    "permissionsLink": {
     "type": "string",
     "description": "A link to the permissions collection."
    },
    "quotaBytesUsed": {
     "type": "string",
     "description": "The number of quota bytes used by this file.",
     "format": "int64"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this file."
    },
    "sharedWithMeDate": {
     "type": "string",
     "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "thumbnailLink": {
     "type": "string",
     "description": "A link to the file's thumbnail."
    },
    "title": {
     "type": "string",
     "description": "The title of this file."
    },
    "userPermission": {
     "$ref": "Permission",
     "description": "The permissions for the authenticated user on this file."
    },
    "writersCanShare": {
     "type": "boolean",
     "description": "Whether writers can share the document with other users."
    }
   }
  },
  "FileList": {
   "id": "FileList",
   "type": "object",
   "description": "A list of files.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of files.",
     "items": {
      "$ref": "File"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#fileList.",
     "default": "drive#fileList"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of files."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of files."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "ParentList": {
   "id": "ParentList",
   "type": "object",
   "description": "A list of a file's parents.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of parents.",
     "items": {
      "$ref": "ParentReference"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#parentList.",
     "default": "drive#parentList"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "ParentReference": {
   "id": "ParentReference",
   "type": "object",
   "description": "A reference to a file's parent.",
   "properties": {
    "id": {
     "type": "string",
     "description": "The ID of the parent."
    },
    "isRoot": {
     "type": "boolean",
     "description": "Whether or not the parent is the root folder."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#parentReference.",
     "default": "drive#parentReference"
    },
    "parentLink": {
     "type": "string",
     "description": "A link to the parent."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this reference."
    }
   }
  },
  "Permission": {
   "id": "Permission",
   "type": "object",
   "description": "A single permission for a file.",
   "properties": {
    "additionalRoles": {
     "type": "array",
     "description": "Additional roles for this user. Only commenter is currently allowed.",
     "items": {
      "type": "string"
     }
    },
    "authKey": {
     "type": "string",
     "description": "The authkey parameter required for this permission."
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the permission."
    },
    "id": {
     "type": "string",
     "description": "The ID of the permission."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#permission.",
     "default": "drive#permission"
    },
    "name": {
     "type": "string",
     "description": "The name for this permission."
    },
    "photoLink": {
     "type": "string",
     "description": "A link to the profile photo, if available."
    },
    "role": {
     "type": "string",
     "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this permission."
    },
    "type": {
     "type": "string",
     "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
    },
    "value": {
     "type": "string",
     "description": "The email address or domain name for the entity. This is not populated in responses."
    },
    "withLink": {
     "type": "boolean",
     "description": "Whether the link is required for this permission."
    }
   }
  },
  "PermissionList": {
   "id": "PermissionList",
   "type": "object",
   "description": "A list of permissions associated with a file.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of permissions.",
     "items": {
      "$ref": "Permission"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#permissionList.",
     "default": "drive#permissionList"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "Revision": {
   "id": "Revision",
   "type": "object",
   "description": "A single revision of a file.",
   "properties": {
    "downloadUrl": {
     "type": "string",
     "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the revision."
    },
    "exportLinks": {
     "type": "object",
     "description": "Links for exporting Google Docs to specific formats.",
     "additionalProperties": {
      "type": "string",
      "description": "A mapping from export format to URL"
     }
    },
    "fileSize": {
     "type": "string",
     "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
     "format": "int64"
    },
    "id": {
     "type": "string",
     "description": "The ID of the revision."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#revision.",
     "default": "drive#revision"
    },
    "lastModifyingUserName": {
     "type": "string",
     "description": "Name of the last user to modify this revision."
    },
    "md5Checksum": {
     "type": "string",
     "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
    },
    "mimeType": {
     "type": "string",
     "description": "The MIME type of the revision."
    },
    "modifiedDate": {
     "type": "string",
     "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "originalFilename": {
     "type": "string",
     "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
    },
    "pinned": {
     "type": "boolean",
     "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated on files with content stored in Drive."
    },
    "publishAuto": {
     "type": "boolean",
     "description": "Whether subsequent revisions will be automatically republished."
    },
    "published": {
     "type": "boolean",
     "description": "Whether this revision is published. This is only populated for Google Docs."
    },
    "publishedLink": {
     "type": "string",
     "description": "A link to the published revision."
    },
    "publishedOutsideDomain": {
     "type": "boolean",
     "description": "Whether this revision is published outside the domain."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this revision."
    }
   }
  },
  "RevisionList": {
   "id": "RevisionList",
   "type": "object",
   "description": "A list of revisions of a file.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of revisions.",
     "items": {
      "$ref": "Revision"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#revisionList.",
     "default": "drive#revisionList"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  }
 },
 "resources": {
  "about": {
   "methods": {
    "get": {
     "id": "drive.about.get",
     "path": "about",
     "httpMethod": "GET",
     "description": "Gets the information about the current user along with Drive API settings",
     "parameters": {
      "includeSubscribed": {
       "type": "boolean",
       "description": "Whether to include subscribed items when calculating the number of remaining change IDs",
       "default": "true",
       "location": "query"
      },
      "maxChangeIdCount": {
       "type": "string",
       "description": "Maximum number of remaining change IDs to count",
       "default": "1",
       "format": "uint64",
       "location": "query"
      },
      "startChangeId": {
       "type": "string",
       "description": "Change ID to start counting from when calculating number of remaining change IDs",
       "format": "uint64",
       "location": "query"
      }
     },
     "response": {
      "$ref": "About"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "apps": {
   "methods": {
    "list": {
     "id": "drive.apps.list",
     "path": "apps",
     "httpMethod": "GET",
     "description": "Lists a user's apps.",
     "response": {
      "$ref": "AppList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive.apps.readonly"
     ]
    }
   }
  },
  "changes": {
   "methods": {
    "get": {
     "id": "drive.changes.get",
     "path": "changes/{changeId}",
     "httpMethod": "GET",
     "description": "Gets a specific change.",
     "parameters": {
      "changeId": {
       "type": "string",
       "description": "The ID of the change.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "changeId"
     ],
     "response": {
      "$ref": "Change"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "list": {
     "id": "drive.changes.list",
     "path": "changes",
     "httpMethod": "GET",
     "description": "Lists the changes for a user.",
     "parameters": {
      "includeDeleted": {
       "type": "boolean",
       "description": "Whether to include deleted items.",
       "default": "true",
       "location": "query"
      },
      "includeSubscribed": {
       "type": "boolean",
       "description": "Whether to include subscribed items.",
       "default": "true",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of changes to return.",
       "default": "100",
       "format": "int32",
       "minimum": "0",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for changes.",
       "location": "query"
      },
      "startChangeId": {
       "type": "string",
       "description": "Change ID to start listing changes from.",
       "format": "uint64",
       "location": "query"
      }
     },
     "response": {
      "$ref": "ChangeList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "children": {
   "methods": {
    "delete": {
     "id": "drive.children.delete",
     "path": "files/{folderId}/children/{childId}",
     "httpMethod": "DELETE",
     "description": "Removes a child from a folder.",
     "parameters": {
      "childId": {
       "type": "string",
       "description": "The ID of the child.",
       "required": true,
       "location": "path"
      },
      "folderId": {
       "type": "string",
       "description": "The ID of the folder.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "folderId",
      "childId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.children.get",
     "path": "files/{folderId}/children/{childId}",
     "httpMethod": "GET",
     "description": "Gets a specific child reference.",
     "parameters": {
      "childId": {
       "type": "string",
       "description": "The ID of the child.",
       "required": true,
       "location": "path"
      },
      "folderId": {
       "type": "string",
       "description": "The ID of the folder.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "folderId",
      "childId"
     ],
     "response": {
      "$ref": "ChildReference"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.children.insert",
     "path": "files/{folderId}/children",
     "httpMethod": "POST",
     "description": "Inserts a file into a folder.",
     "parameters": {
      "folderId": {
       "type": "string",
       "description": "The ID of the folder.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "folderId"
     ],
     "request": {
      "$ref": "ChildReference"
     },
     "response": {
      "$ref": "ChildReference"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "list": {
     "id": "drive.children.list",
     "path": "files/{folderId}/children",
     "httpMethod": "GET",
     "description": "Lists a folder's children.",
     "parameters": {
      "folderId": {
       "type": "string",
       "description": "The ID of the folder.",
       "required": true,
       "location": "path"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of children to return.",
       "default": "100",
       "format": "int32",
       "minimum": "0",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for children.",
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Query string for searching children.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "folderId"
     ],
     "response": {
      "$ref": "ChildList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "files": {
   "methods": {
    "copy": {
     "id": "drive.files.copy",
     "path": "files/{fileId}/copy",
     "httpMethod": "POST",
     "description": "Creates a copy of the specified file.",
     "parameters": {
      "convert": {
       "type": "boolean",
       "description": "Whether to convert this file to the corresponding Google Docs format.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to copy.",
       "required": true,
       "location": "path"
      },
      "ocr": {
       "type": "boolean",
       "description": "Whether to attempt OCR on .jpg, .png, or .gif uploads.",
       "default": "false",
       "location": "query"
      },
      "ocrLanguage": {
       "type": "string",
       "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
       "location": "query"
      },
      "sourceLanguage": {
       "type": "string",
       "description": "The language of the original file to be translated.",
       "location": "query"
      },
      "targetLanguage": {
       "type": "string",
       "description": "Target language to translate the file to. If no sourceLanguage is provided, the API will attempt to detect the language.",
       "location": "query"
      },
      "timedTextLanguage": {
       "type": "string",
       "description": "The language of the timed text.",
       "location": "query"
      },
      "timedTextTrackName": {
       "type": "string",
       "description": "The timed text track name.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "delete": {
     "id": "drive.files.delete",
     "path": "files/{fileId}",
     "httpMethod": "DELETE",
     "description": "Permanently deletes a file by ID. Skips the trash.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file to delete.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.files.get",
     "path": "files/{fileId}",
     "httpMethod": "GET",
     "description": "Gets a file's metadata by ID.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file in question.",
       "required": true,
       "location": "path"
      },
      "projection": {
       "type": "string",
       "description": "Restrict information returned for simplicity and optimization.",
       "enum": [
        "BASIC",
        "FULL"
       ],
       "enumDescriptions": [
        "Includes only the basic metadata fields",
        "Includes all metadata fields"
       ],
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Whether to update the view date after successfully retrieving the file.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.files.insert",
     "path": "files",
     "httpMethod": "POST",
     "description": "Insert a new file.",
     "parameters": {
      "convert": {
       "type": "boolean",
       "description": "Whether to convert this file to the corresponding Google Docs format.",
       "default": "false",
       "location": "query"
      },
      "ocr": {
       "type": "boolean",
       "description": "Whether to attempt OCR on .jpg, .png, or .gif uploads.",
       "default": "false",
       "location": "query"
      },
      "ocrLanguage": {
       "type": "string",
       "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
       "location": "query"
      },
      "pinned": {
       "type": "boolean",
       "description": "Whether to pin the head revision of the uploaded file.",
       "default": "false",
       "location": "query"
      },
      "sourceLanguage": {
       "type": "string",
       "description": "The language of the original file to be translated.",
       "location": "query"
      },
      "targetLanguage": {
       "type": "string",
       "description": "Target language to translate the file to. If no sourceLanguage is provided, the API will attempt to detect the language.",
       "location": "query"
      },
      "timedTextLanguage": {
       "type": "string",
       "description": "The language of the timed text.",
       "location": "query"
      },
      "timedTextTrackName": {
       "type": "string",
       "description": "The timed text track name.",
       "location": "query"
      }
     },
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ],
     "supportsMediaUpload": true,
     "mediaUpload": {
      "accept": [
       "*/*"
      ],
      "maxSize": "10GB",
      "protocols": {
       "simple": {
        "multipart": true,
        "path": "/upload/drive/v2/files"
       },
       "resumable": {
        "multipart": true,
        "path": "/resumable/upload/drive/v2/files"
       }
      }
     }
    },
    "list": {
     "id": "drive.files.list",
     "path": "files",
     "httpMethod": "GET",
     "description": "Lists the user's files.",
     "parameters": {
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of files to return.",
       "default": "100",
       "format": "int32",
       "minimum": "0",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for files.",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Restrict information returned for simplicity and optimization.",
       "enum": [
        "BASIC",
        "FULL"
       ],
       "enumDescriptions": [
        "Includes only the basic metadata fields",
        "Includes all metadata fields"
       ],
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Query string for searching files.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "FileList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.files.patch",
     "path": "files/{fileId}",
     "httpMethod": "PATCH",
     "description": "Updates file metadata and/or content. This method supports patch semantics.",
     "parameters": {
      "convert": {
       "type": "boolean",
       "description": "Whether to convert this file to the corresponding Google Docs format.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to update.",
       "required": true,
       "location": "path"
      },
      "newRevision": {
       "type": "boolean",
       "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision will be replaced.",
       "default": "true",
       "location": "query"
      },
      "ocr": {
       "type": "boolean",
       "description": "Whether to attempt OCR on .jpg, .png, or .gif uploads.",
       "default": "false",
       "location": "query"
      },
      "ocrLanguage": {
       "type": "string",
       "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
       "location": "query"
      },
      "pinned": {
       "type": "boolean",
       "description": "Whether to pin the new revision.",
       "default": "false",
       "location": "query"
      },
      "setModifiedDate": {
       "type": "boolean",
       "description": "Whether to set the modified date with the supplied modified date.",
       "default": "false",
       "location": "query"
      },
      "sourceLanguage": {
       "type": "string",
       "description": "The language of the original file to be translated.",
       "location": "query"
      },
      "targetLanguage": {
       "type": "string",
       "description": "Target language to translate the file to. If no sourceLanguage is provided, the API will attempt to detect the language.",
       "location": "query"
      },
      "timedTextLanguage": {
       "type": "string",
       "description": "The language of the timed text.",
       "location": "query"
      },
      "timedTextTrackName": {
       "type": "string",
       "description": "The timed text track name.",
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Whether to update the view date after successfully updating the file.",
       "default": "true",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "touch": {
     "id": "drive.files.touch",
     "path": "files/{fileId}/touch",
     "httpMethod": "POST",
     "description": "Set the file's updated time to the current server time.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file to update.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "trash": {
     "id": "drive.files.trash",
     "path": "files/{fileId}/trash",
     "httpMethod": "POST",
     "description": "Moves a file to the trash.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file to trash.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "untrash": {
     "id": "drive.files.untrash",
     "path": "files/{fileId}/untrash",
     "httpMethod": "POST",
     "description": "Restores a file from the trash.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file to untrash.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "update": {
     "id": "drive.files.update",
     "path": "files/{fileId}",
     "httpMethod": "PUT",
     "description": "Updates file metadata and/or content",
     "parameters": {
      "convert": {
       "type": "boolean",
       "description": "Whether to convert this file to the corresponding Google Docs format.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to update.",
       "required": true,
       "location": "path"
      },
      "newRevision": {
       "type": "boolean",
       "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision will be replaced.",
       "default": "true",
       "location": "query"
      },
      "ocr": {
       "type": "boolean",
       "description": "Whether to attempt OCR on .jpg, .png, or .gif uploads.",
       "default": "false",
       "location": "query"
      },
      "ocrLanguage": {
       "type": "string",
       "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
       "location": "query"
      },
      "pinned": {
       "type": "boolean",
       "description": "Whether to pin the new revision.",
       "default": "false",
       "location": "query"
      },
      "setModifiedDate": {
       "type": "boolean",
       "description": "Whether to set the modified date with the supplied modified date.",
       "default": "false",
       "location": "query"
      },
      "sourceLanguage": {
       "type": "string",
       "description": "The language of the original file to be translated.",
       "location": "query"
      },
      "targetLanguage": {
       "type": "string",
       "description": "Target language to translate the file to. If no sourceLanguage is provided, the API will attempt to detect the language.",
       "location": "query"
      },
      "timedTextLanguage": {
       "type": "string",
       "description": "The language of the timed text.",
       "location": "query"
      },
      "timedTextTrackName": {
       "type": "string",
       "description": "The timed text track name.",
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Whether to update the view date after successfully updating the file.",
       "default": "true",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ],
     "supportsMediaUpload": true,
     "mediaUpload": {
      "accept": [
       "*/*"
      ],
      "maxSize": "10GB",
      "protocols": {
       "simple": {
        "multipart": true,
        "path": "/upload/drive/v2/files/{fileId}"
       },
       "resumable": {
        "multipart": true,
        "path": "/resumable/upload/drive/v2/files/{fileId}"
       }
      }
     }
    }
   }
  },
  "parents": {
   "methods": {
    "delete": {
     "id": "drive.parents.delete",
     "path": "files/{fileId}/parents/{parentId}",
     "httpMethod": "DELETE",
     "description": "Removes a parent from a file.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "parentId": {
       "type": "string",
       "description": "The ID of the parent.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "parentId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.parents.get",
     "path": "files/{fileId}/parents/{parentId}",
     "httpMethod": "GET",
     "description": "Gets a specific parent reference.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "parentId": {
       "type": "string",
       "description": "The ID of the parent.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "parentId"
     ],
     "response": {
      "$ref": "ParentReference"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.parents.insert",
     "path": "files/{fileId}/parents",
     "httpMethod": "POST",
     "description": "Adds a parent folder for a file.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "ParentReference"
     },
     "response": {
      "$ref": "ParentReference"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "list": {
     "id": "drive.parents.list",
     "path": "files/{fileId}/parents",
     "httpMethod": "GET",
     "description": "Lists a file's parents.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "ParentList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "permissions": {
   "methods": {
    "delete": {
     "id": "drive.permissions.delete",
     "path": "files/{fileId}/permissions/{permissionId}",
     "httpMethod": "DELETE",
     "description": "Deletes a permission from a file.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the permission.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "permissionId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.permissions.get",
     "path": "files/{fileId}/permissions/{permissionId}",
     "httpMethod": "GET",
     "description": "Gets a permission by ID.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the permission.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "permissionId"
     ],
     "response": {
      "$ref": "Permission"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.permissions.insert",
     "path": "files/{fileId}/permissions",
     "httpMethod": "POST",
     "description": "Inserts a permission for a file.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "sendNotificationEmails": {
       "type": "boolean",
       "description": "Whether to send notification emails.",
       "default": "true",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "Permission"
     },
     "response": {
      "$ref": "Permission"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "list": {
     "id": "drive.permissions.list",
     "path": "files/{fileId}/permissions",
     "httpMethod": "GET",
     "description": "Lists a file's permissions.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "PermissionList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.permissions.patch",
     "path": "files/{fileId}/permissions/{permissionId}",
     "httpMethod": "PATCH",
     "description": "Updates a permission. This method supports patch semantics.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the permission.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "permissionId"
     ],
     "request": {
      "$ref": "Permission"
     },
     "response": {
      "$ref": "Permission"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "update": {
     "id": "drive.permissions.update",
     "path": "files/{fileId}/permissions/{permissionId}",
     "httpMethod": "PUT",
     "description": "Updates a permission.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the permission.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "permissionId"
     ],
     "request": {
      "$ref": "Permission"
     },
     "response": {
      "$ref": "Permission"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    }
   }
  },
  "revisions": {
   "methods": {
    "delete": {
     "id": "drive.revisions.delete",
     "path": "files/{fileId}/revisions/{revisionId}",
     "httpMethod": "DELETE",
     "description": "Removes a revision.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID of the revision.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "revisionId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.revisions.get",
     "path": "files/{fileId}/revisions/{revisionId}",
     "httpMethod": "GET",
     "description": "Gets a specific revision.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID of the revision.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "revisionId"
     ],
     "response": {
      "$ref": "Revision"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "list": {
     "id": "drive.revisions.list",
     "path": "files/{fileId}/revisions",
     "httpMethod": "GET",
     "description": "Lists a file's revisions.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "RevisionList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.revisions.patch",
     "path": "files/{fileId}/revisions/{revisionId}",
     "httpMethod": "PATCH",
     "description": "Updates a revision. This method supports patch semantics.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID for the revision.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "revisionId"
     ],
     "request": {
      "$ref": "Revision"
     },
     "response": {
      "$ref": "Revision"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "update": {
     "id": "drive.revisions.update",
     "path": "files/{fileId}/revisions/{revisionId}",
     "httpMethod": "PUT",
     "description": "Updates a revision.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID for the revision.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "revisionId"
     ],
     "request": {
      "$ref": "Revision"
     },
     "response": {
      "$ref": "Revision"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    }
   }
  }
 }
}
